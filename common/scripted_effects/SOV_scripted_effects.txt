#Rework
bukharin_civilwar_decision = {
	custom_effect_tooltip = bukharin_civilwar_tt
	hidden_effect = {
		set_global_flag = soviet_civilwar_by_workers_opposition_flag
		create_dynamic_country = {
			original_tag = SOV
			every_state = {
				limit = {
					is_core_of = SOV
				}
				add_core_of = SOS
			}
			set_capital = { state = 219 }
			set_politics = {
				ruling_party = communism
				elections_allowed = no
			}
			set_popularities = {
				democratic = 1
				neutrality = 9
				fascism = 4
				communism = 86
			}
			load_focus_tree = soviet_focus_rework
			set_country_flag = pass_events_flag
			set_country_flag = SOV_troika_stalin_flag
			complete_national_focus = SOV_death_of_kamenev
			complete_national_focus = SOV_establish_the_troika
			complete_national_focus = SOV_it_is_clear_to_us
			complete_national_focus = SOV_the_only_path_that_is_viable
			complete_national_focus = SOV_for_the_survival_of_the_union
			complete_national_focus = SOV_is_the_path_of
			complete_national_focus = SOV_the_secretary_compromise
			complete_national_focus = SOV_the_troika_center
			complete_national_focus = SOV_maintain_ministers
			complete_national_focus = SOV_form_the_ministry_of_intelligence
			complete_national_focus = SOV_ousting_militarists
			set_cosmetic_tag = SOS
			reserve_dynamic_country = yes
			if = {
				limit = {
					SOV = { has_idea = SOV_idea_sluggish_industrialization }
				}
				add_ideas = SOV_idea_sluggish_industrialization
			}
			if = {
				limit = {
					SOV = { has_idea = SOV_precarious_country_high }
				}
				add_ideas = SOV_precarious_country_high
			}
			add_ideas = Soviet_Civil_War
			add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
			add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = SOV.SOV_the_red_army_land_doctrine_cost_factor }
			add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
			add_to_variable = { SOV_the_red_army_dig_in_speed_factor = SOV.SOV_the_red_army_dig_in_speed_factor }
			add_to_variable = { SOV_the_red_army_conscription_factor = SOV.SOV_the_red_army_conscription_factor }
			add_to_variable = { SOV_the_red_army_training_time_factor = SOV.SOV_the_red_army_training_time_factor }
			add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
			add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
			add_to_variable = { SOV_the_red_army_max_dig_in_factor = SOV.SOV_the_red_army_max_dig_in_factor }
			add_to_variable = { SOV_the_red_army_political_power_factor = SOV.SOV_the_red_army_political_power_factor }
			add_to_variable = { SOV_the_red_army_modifier_army_sub_unit_cavalry_speed_factor = SOV.SOV_the_red_army_modifier_army_sub_unit_cavalry_speed_factor }
			add_to_variable = { SOV_the_red_army_cavalry_attack_factor = SOV.SOV_the_red_army_cavalry_attack_factor }
			add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
			add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
			add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
			add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
			add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
			add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
			add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
			add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
			add_to_variable = { SOV_the_red_fleet_political_power_factor = SOV.SOV_the_red_fleet_political_power_factor }
			add_to_variable = { SOV_red_fleet_special_forces_cap = SOV.SOV_red_fleet_special_forces_cap }
			add_to_variable = { SOV_red_fleet_invasion_preparation = SOV.SOV_red_fleet_invasion_preparation }
			add_to_variable = { SOV_red_fleet_naval_invasion_capacity = SOV.SOV_red_fleet_naval_invasion_capacity }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
			add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
			add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
			add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
			add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
			add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
			add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
			add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
			add_to_variable = { SOV_the_red_airforce_political_power_factor = SOV.SOV_the_red_airforce_political_power_factor }
			add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
			set_variable = { SOV_army_professionalism_var = SOV.SOV_army_professionalism_var }
			set_variable = { SOV_army_influence_var = SOV.SOV_army_influence_var }
			set_variable = { SOV_army_factionalism_var = SOV.SOV_army_factionalism_var }		
			set_variable = { SOV_navy_professionalism_var = SOV.SOV_navy_professionalism_var }
			set_variable = { SOV_navy_technological_innovation_var = SOV.SOV_navy_technological_innovation_var }
			set_variable = { SOV_navy_factionalism_var = SOV.SOV_navy_factionalism_var }			
			set_variable = { SOV_airforce_pilot_training_var = SOV.SOV_airforce_pilot_training_var }
			set_variable = { SOV_airforce_technological_innovation_var = SOV.SOV_airforce_technological_innovation_var }
			set_variable = { SOV_airforce_factionalism_var = SOV.SOV_airforce_factionalism_var }
			every_possible_country = {
				limit = {
					original_tag = SOV
				}
				SOV_troika = {
					set_nationality = SOS
				}
				SOV_iosif_stalin = {
					set_nationality = SOS
				}
				SOV_mikhail_kalinin = {
					set_nationality = SOS
				}
				SOV_nikita_khrushchyov = {
					set_nationality = SOS
				}
				SOV_lazar_kaganovich = {
					set_nationality = SOS
				}
				SOV_ivan_smirnov = {
					set_nationality = SOS
				}
				SOV_ivar_smilga = {
					set_nationality = SOS
				}
				SOV_aleksey_rykov = {
					set_nationality = SOS
				}
				SOV_grigory_sokolnikov = {
					set_nationality = SOS
				}
				SOV_karl_radek = {
					set_nationality = SOS
				}
				SOV_lev_trotsky = {
					set_nationality = SOS
				}
				SOV_grigory_zinovyev = {
					set_nationality = SOS
				}
				SOV_genrikh_yagoda = {
					set_nationality = SOS
				}
				SOV_nikolay_yezhov = {
					set_nationality = SOS
				}
				SOV_semyon_timoshenko = {
					set_nationality = SOS
				}
				SOV_ivan_chernyakhovsky = {
					set_nationality = SOS
				}
				SOV_grigory_kulik = {
					set_nationality = SOS
				}
				SOV_aleksandr_yegorov = {
					set_nationality = SOS
				}
				SOV_vladimir_kasatonov = {
					set_nationality = SOS
				}
				SOV_yevgeny_preobrazhensky = {
					set_nationality = SOS
				}
			}
			SOV_troika = {
				promote_character = yes						
			}
		}
		every_owned_state = {
			limit = {
				NOT = {
					state = 588
					state = 590
					state = 572
					state = 654
					state = 882
					state = 40
					state = 569
					state = 568
					state = 567
					state = 564
					state = 563
					state = 566
					state = 578
					state = 570
					state = 571
					state = 403
					state = 653
					state = 580
					state = 577
					state = 579
					state = 581
					state = 398
					state = 573
					state = 408
					state = 409
					state = 657
					state = 651
					state = 582
					state = 583
					state = 406
					state = 407
					state = 652
					state = 251
					state = 401
					state = 637
					state = 874
					state = 931
					state = 207
					state = 243
					state = 242
					state = 210
					state = 810
					state = 246
					state = 209
					state = 263
					state = 208
					state = 217
					state = 236
					state = 237
					state = 232
					state = 821
					state = 828
					state = 235
					state = 827
					state = 233
					state = 208
					state = 234
					state = 238
					state = 195
					state = 244
					state = 264
					state = 218
					state = 245
					state = 224
					state = 260
					state = 265
				}
			}
			transfer_state_to = SOS
		}
		SOS = {
			inherit_technology = SOV
			set_country_flag = select_play_character
			if = {
				limit = {
					SOV = { has_completed_focus = SOV_The_Red_Terror_Marches_On }
				}
				add_ideas = SOV_The_Red_Terror
			}
			division_template = {
				name = "Strelkovaya Diviziya"
				division_names_group = SOV_INF_01

				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
					infantry = { x = 2 y = 2 }
				}
				support = {
					artillery = { x = 0 y = 0 } 	
				}
			}
			division_template = {
				name = "Gornostrelkovaya Diviziya"
				division_names_group = SOV_MNT_01

				regiments = {
					mountaineers = { x = 0 y = 0 }	
					mountaineers = { x = 0 y = 1 }
					mountaineers = { x = 0 y = 2 }	
					mountaineers = { x = 1 y = 0 }
					mountaineers = { x = 1 y = 1 }
					mountaineers = { x = 1 y = 2 }
					mountaineers = { x = 2 y = 0 }	
					mountaineers = { x = 2 y = 1 }	
					mountaineers = { x = 2 y = 2 }	
					mountaineers = { x = 3 y = 0 }	
					mountaineers = { x = 3 y = 1 }	
					mountaineers = { x = 3 y = 2 }	
				}
				support = {
					engineer = { x = 0 y = 0 }
					artillery = { x = 0 y = 1 }
				}
			}
			division_template = {
				name = "Motostrelkovaya Diviziya"
				division_names_group = SOV_MOT_01
				regiments = {
					motorized = { x = 0 y = 0 }
					motorized = { x = 0 y = 1 }
					motorized = { x = 0 y = 2 }
					motorized = { x = 1 y = 0 }
					motorized = { x = 1 y = 1 }
					motorized = { x = 1 y = 2 }
				}
			}
			division_template = {
				name = "Kavaleriyskaya Diviziya"
				division_names_group = SOV_CAV_01

				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
				}
			}
			division_template = {
				name = "Mekhanizirovaniy Korpus"
				division_names_group = SOV_MEC_01
				regiments = {
					light_armor = { x = 0 y = 0 }
					light_armor = { x = 0 y = 1 }
					light_armor = { x = 1 y = 0 }		
					light_armor = { x = 1 y = 1 }		
					light_armor = { x = 1 y = 2 }		
					motorized = { x = 2 y = 0 }		
					motorized = { x = 2 y = 1 }	
					motorized = { x = 2 y = 2 }		
					motorized = { x = 2 y = 3 }		
				}
			}
			division_template = {
				name = "Vozdushno-Desantnaya Brigada"
				division_names_group = SOV_PAR_01

				regiments = {
					paratrooper = { x = 0 y = 0 }
					paratrooper = { x = 0 y = 1 }
				}
			}
			division_template = {
				name = "Extrany Diviziya"
				division_names_group = SOV_INF_01

				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
				}
				priority = 0
				is_locked = yes
			}
			if = {
				limit = {
					SOV = { is_ai = no }
				}
				247 = {
					create_unit = {
						division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
						owner = SOS
						count = 4
					}
				}
				219 = {
					create_unit = {
						division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
						owner = SOS
						count = 4
					}
				}
				220 = {
					create_unit = {
						division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
						owner = SOS
						count = 4
					}
				}
				250 = {
					create_unit = {
						division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
						owner = SOS
						count = 4
					}
				}
			}
			399 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOS
					count = 4
				}
			}
			584 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOS
					count = 4
				}
			}
			516 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOS
					count = 4
				}
			}
			214 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOS
					count = 4
				}
			}
			880 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOS
					count = 4
				}
			}
		}
		SOV = {
			dismantle_faction = yes
			if = {
				limit = {
					SOV = { is_ai = yes }
				}
				transfer_units_fraction = {
					target = SOS
					size = 0.2
					stockpile_ratio = 0.15
					army_ratio = 0.2
					navy_ratio = 0.15
					air_ratio = 0.15
					keep_unit_leaders_trigger = {
						always = yes
					}
				}
			}
			else = {
				transfer_units_fraction = {
					target = SOS
					size = 0.3
					stockpile_ratio = 0.3
					army_ratio = 0.3
					navy_ratio = 0.3
					air_ratio = 0.3
					keep_unit_leaders_trigger = {
						always = yes
					}
				}
			}
			add_ideas = Soviet_Civil_War
			remove_ideas = home_of_revolution
			if = {
				limit = {
					has_completed_focus = SOV_Prepare_the_Baricades
				}
				add_ideas = SOV_Prepare_the_Baricades
			}
			set_cosmetic_tag = SOB
			declare_war_on = {
				target = SOS
				type = civil_war
			}
			SOV_nikolay_bukharin = {
				add_country_leader_role = {
					promote_leader = yes
					country_leader = {
						ideology = leninism
						traits = { economy_reformer }
					}
				}
			}
			set_global_flag = soviet_civilwar_focus
			division_template = {
				name = "Extrany Diviziya"
				division_names_group = SOV_INF_01

				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
				}
				priority = 0
				is_locked = yes 
			}
			264 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			246 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			242 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			243 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			224 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			260 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			217 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			651 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			588 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			234 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			406 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			563 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			580 = {
				create_unit = {
					division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
					owner = SOB
					count = 4
				}
			}
			if = {
				limit = {
					has_country_flag = additional_divisions_in_eastern_russia
				}
				567 = {
					create_unit = {
						division = "name = \"1. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"2. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"3. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"4. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
				}
			}
			if = {
				limit = {
					has_country_flag = additional_divisions_in_western_russia
				}
				246 = {
					create_unit = {
						division = "name = \"5. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"6. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"7. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"8. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
				}
			}
			if = {
				limit = {
					has_country_flag = additional_divisions_in_middle_russia
				}
				398 = {
					create_unit = {
						division = "name = \"9. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"10. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"11. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"12. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
				}
			}
			if = {
				limit = {
					has_country_flag = additional_divisions_in_middle_asia
				}
				583 = {
					create_unit = {
						division = "name = \"13. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"14. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"15. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
					create_unit = {
						division = "name = \"16. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
						owner = SOB
					}
				}
			}
		}
	}
}

# Old
#6% 증가(increase)
SOV_stalins_influence_six_increase = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence < 0.94 }
		}
		add_to_variable = { var = SOV_stalins_influence value = 0.06 }
		custom_effect_tooltip = SOV_stalins_influence_five_increase
		else = {
			multiply_variable = {
				SOV_stalins_influence = 1
			}
			custom_effect_tooltip = SOV_stalins_influence_max_increase
		}
	}
}
SOV_zinoviev_influence_six_increase = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence < 0.94 }
		}
		add_to_variable = { var = SOV_zinoviev_influence value = 0.06 }
		custom_effect_tooltip = SOV_zinoviev_influence_five_increase
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 1
			}
			custom_effect_tooltip = SOV_zinoviev_influence_max_increase
		}
	}
}
SOV_trotskys_influence_six_increase = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence < 0.94 }
		}
		add_to_variable = { var = SOV_trotskys_influence value = 0.06 }
		custom_effect_tooltip = SOV_trotskys_influence_five_increase
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 1
			}
			custom_effect_tooltip = SOV_trotskys_influence_max_increase
		}
	}
}
#5% 증가(increase)
SOV_stalins_influence_five_increase = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence < 0.95 }
		}
		add_to_variable = { var = SOV_stalins_influence value = 0.05 }
		custom_effect_tooltip = SOV_stalins_influence_five_increase
		else = {
			multiply_variable = {
				SOV_stalins_influence = 1
			}
			custom_effect_tooltip = SOV_stalins_influence_max_increase
		}
	}
}
SOV_zinoviev_influence_five_increase = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence < 0.95 }
		}
		add_to_variable = { var = SOV_zinoviev_influence value = 0.05 }
		custom_effect_tooltip = SOV_zinoviev_influence_five_increase
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 1
			}
			custom_effect_tooltip = SOV_zinoviev_influence_max_increase
		}
	}
}
SOV_trotskys_influence_five_increase = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence < 0.95 }
		}
		add_to_variable = { var = SOV_trotskys_influence value = 0.05 }
		custom_effect_tooltip = SOV_trotskys_influence_five_increase
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 1
			}
			custom_effect_tooltip = SOV_trotskys_influence_max_increase
		}
	}
}
#4% 증가(increase)
SOV_stalins_influence_four_increase = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence < 0.96 }
		}
		add_to_variable = { var = SOV_stalins_influence value = 0.04 }
		custom_effect_tooltip = SOV_stalins_influence_four_increase
		else = {
			multiply_variable = {
				SOV_stalins_influence = 1
			}
			custom_effect_tooltip = SOV_stalins_influence_max_increase
		}
	}
}
SOV_zinoviev_influence_four_increase = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence < 0.96 }
		}
		add_to_variable = { var = SOV_zinoviev_influence value = 0.04 }
		custom_effect_tooltip = SOV_zinoviev_influence_four_increase
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 1
			}
			custom_effect_tooltip = SOV_zinoviev_influence_max_increase
		}
	}
}
SOV_trotskys_influence_four_increase = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence < 0.96 }
		}
		add_to_variable = { var = SOV_trotskys_influence value = 0.04 }
		custom_effect_tooltip = SOV_trotskys_influence_four_increase
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 1
			}
			custom_effect_tooltip = SOV_trotskys_influence_max_increase
		}
	}
}
#3% 증가(increase)
SOV_stalins_influence_three_increase = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence < 0.97 }
		}
		add_to_variable = { var = SOV_stalins_influence value = 0.03 }
		custom_effect_tooltip = SOV_stalins_influence_three_increase
		else = {
			multiply_variable = {
				SOV_stalins_influence = 1
			}
			custom_effect_tooltip = SOV_stalins_influence_max_increase
		}
	}
}
SOV_zinoviev_influence_three_increase = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence < 0.97 }
		}
		add_to_variable = { var = SOV_zinoviev_influence value = 0.03 }
		custom_effect_tooltip = SOV_zinoviev_influence_three_increase
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 1
			}
			custom_effect_tooltip = SOV_zinoviev_influence_max_increase
		}
	}
}
SOV_trotskys_influence_three_increase = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence < 0.97 }
		}
		add_to_variable = { var = SOV_trotskys_influence value = 0.03 }
		custom_effect_tooltip = SOV_trotskys_influence_three_increase
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 1
			}
			custom_effect_tooltip = SOV_trotskys_influence_max_increase
		}
	}
}
#2% 증가(increase)
SOV_stalins_influence_two_increase = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence < 0.98 }
		}
		add_to_variable = { var = SOV_stalins_influence value = 0.02 }
		custom_effect_tooltip = SOV_stalins_influence_two_increase
		else = {
			multiply_variable = {
				SOV_stalins_influence = 1
			}
			custom_effect_tooltip = SOV_stalins_influence_max_increase
		}
	}
}
SOV_zinoviev_influence_two_increase = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence < 0.98 }
		}
		add_to_variable = { var = SOV_zinoviev_influence value = 0.02 }
		custom_effect_tooltip = SOV_zinoviev_influence_two_increase
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 1
			}
			custom_effect_tooltip = SOV_zinoviev_influence_max_increase
		}
	}
}
SOV_trotskys_influence_two_increase = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence < 0.98 }
		}
		add_to_variable = { var = SOV_trotskys_influence value = 0.02 }
		custom_effect_tooltip = SOV_trotskys_influence_two_increase
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 1
			}
			custom_effect_tooltip = SOV_trotskys_influence_max_increase
		}
	}
}
#1% 증가(increase)
SOV_stalins_influence_one_increase = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence < 0.99 }
		}
		add_to_variable = { var = SOV_stalins_influence value = 0.01 }
		custom_effect_tooltip = SOV_stalins_influence_one_increase
		else = {
			multiply_variable = {
				SOV_stalins_influence = 1
			}
			custom_effect_tooltip = SOV_stalins_influence_max_increase
		}
	}
}
SOV_zinoviev_influence_one_increase = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence < 0.99 }
		}
		add_to_variable = { var = SOV_zinoviev_influence value = 0.01 }
		custom_effect_tooltip = SOV_zinoviev_influence_one_increase
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 1
			}
			custom_effect_tooltip = SOV_zinoviev_influence_max_increase
		}
	}
}
SOV_trotskys_influence_one_increase = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence < 0.99 }
		}
		add_to_variable = { var = SOV_trotskys_influence value = 0.01 }
		custom_effect_tooltip = SOV_trotskys_influence_one_increase
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 1
			}
			custom_effect_tooltip = SOV_trotskys_influence_max_increase
		}
	}
}

#6% 감소(decrease)
SOV_stalins_influence_six_decrease = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence > 0.06 }
		}
		subtract_from_variable = { var = SOV_stalins_influence value = 0.06 }
		custom_effect_tooltip = SOV_stalins_influence_five_decrease
		else = {
			multiply_variable = {
				SOV_stalins_influence = 0
			}
			custom_effect_tooltip = SOV_stalins_influence_min_decrease
		}
	}
}
SOV_zinoviev_influence_six_decrease = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence > 0.06 }
		}
		subtract_from_variable = { var = SOV_zinoviev_influence value = 0.06 }
		custom_effect_tooltip = SOV_zinoviev_influence_five_decrease
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 0
			}
			custom_effect_tooltip = SOV_zinoviev_influence_min_decrease
		}
	}
}
SOV_trotskys_influence_six_decrease = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence > 0.06 }
		}
		subtract_from_variable = { var = SOV_trotskys_influence value = 0.06 }
		custom_effect_tooltip = SOV_trotskys_influence_five_decrease
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 0
			}
			custom_effect_tooltip = SOV_trotskys_influence_min_decrease
		}
	}
}
#5% 감소(decrease)
SOV_stalins_influence_five_decrease = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence > 0.05 }
		}
		subtract_from_variable = { var = SOV_stalins_influence value = 0.05 }
		custom_effect_tooltip = SOV_stalins_influence_five_decrease
		else = {
			multiply_variable = {
				SOV_stalins_influence = 0
			}
			custom_effect_tooltip = SOV_stalins_influence_min_decrease
		}
	}
}
SOV_zinoviev_influence_five_decrease = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence > 0.05 }
		}
		subtract_from_variable = { var = SOV_zinoviev_influence value = 0.05 }
		custom_effect_tooltip = SOV_zinoviev_influence_five_decrease
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 0
			}
			custom_effect_tooltip = SOV_zinoviev_influence_min_decrease
		}
	}
}
SOV_trotskys_influence_five_decrease = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence > 0.05 }
		}
		subtract_from_variable = { var = SOV_trotskys_influence value = 0.05 }
		custom_effect_tooltip = SOV_trotskys_influence_five_decrease
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 0
			}
			custom_effect_tooltip = SOV_trotskys_influence_min_decrease
		}
	}
}
#4% 감소(decrease)
SOV_stalins_influence_four_decrease = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence > 0.04 }
		}
		subtract_from_variable = { var = SOV_stalins_influence value = 0.04 }
		custom_effect_tooltip = SOV_stalins_influence_four_decrease
		else = {
			multiply_variable = {
				SOV_stalins_influence = 0
			}
			custom_effect_tooltip = SOV_stalins_influence_min_decrease
		}
	}
}
SOV_zinoviev_influence_four_decrease = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence > 0.04 }
		}
		subtract_from_variable = { var = SOV_zinoviev_influence value = 0.04 }
		custom_effect_tooltip = SOV_zinoviev_influence_four_decrease
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 0
			}
			custom_effect_tooltip = SOV_zinoviev_influence_min_decrease
		}
	}
}
SOV_trotskys_influence_four_decrease = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence > 0.04 }
		}
		subtract_from_variable = { var = SOV_trotskys_influence value = 0.04 }
		custom_effect_tooltip = SOV_trotskys_influence_four_decrease
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 0
			}
			custom_effect_tooltip = SOV_trotskys_influence_min_decrease
		}
	}
}
#3% 감소(decrease)
SOV_stalins_influence_three_decrease = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence > 0.03 }
		}
		subtract_from_variable = { var = SOV_stalins_influence value = 0.03 }
		custom_effect_tooltip = SOV_stalins_influence_three_decrease
		else = {
			multiply_variable = {
				SOV_stalins_influence = 0
			}
			custom_effect_tooltip = SOV_stalins_influence_min_decrease
		}
	}
}
SOV_zinoviev_influence_three_decrease = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence > 0.03 }
		}
		subtract_from_variable = { var = SOV_zinoviev_influence value = 0.03 }
		custom_effect_tooltip = SOV_zinoviev_influence_three_decrease
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 0
			}
			custom_effect_tooltip = SOV_zinoviev_influence_min_decrease
		}
	}
}
SOV_trotskys_influence_three_decrease = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence > 0.03 }
		}
		subtract_from_variable = { var = SOV_trotskys_influence value = 0.03 }
		custom_effect_tooltip = SOV_trotskys_influence_three_decrease
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 0
			}
			custom_effect_tooltip = SOV_trotskys_influence_min_decrease
		}
	}
}
#2% 감소(decrease)
SOV_stalins_influence_two_decrease = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence > 0.02 }
		}
		subtract_from_variable = { var = SOV_stalins_influence value = 0.02 }
		custom_effect_tooltip = SOV_stalins_influence_two_decrease
		else = {
			multiply_variable = {
				SOV_stalins_influence = 0
			}
			custom_effect_tooltip = SOV_stalins_influence_min_decrease
		}
	}
}
SOV_zinoviev_influence_two_decrease = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence > 0.02 }
		}
		subtract_from_variable = { var = SOV_zinoviev_influence value = 0.02 }
		custom_effect_tooltip = SOV_zinoviev_influence_two_decrease
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 0
			}
			custom_effect_tooltip = SOV_zinoviev_influence_min_decrease
		}
	}
}
SOV_trotskys_influence_two_decrease = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence > 0.02 }
		}
		subtract_from_variable = { var = SOV_trotskys_influence value = 0.02 }
		custom_effect_tooltip = SOV_trotskys_influence_two_decrease
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 0
			}
			custom_effect_tooltip = SOV_trotskys_influence_min_decrease
		}
	}
}
#1% 감소(decrease)
SOV_stalins_influence_one_decrease = {
	if = {
		limit = {
			check_variable = { SOV_stalins_influence > 0.01 }
		}
		subtract_from_variable = { var = SOV_stalins_influence value = 0.01 }
		custom_effect_tooltip = SOV_stalins_influence_one_decrease
		else = {
			multiply_variable = {
				SOV_stalins_influence = 0
			}
			custom_effect_tooltip = SOV_stalins_influence_min_decrease
		}
	}
}
SOV_zinoviev_influence_one_decrease = {
	if = {
		limit = {
			check_variable = { SOV_zinoviev_influence > 0.01 }
		}
		subtract_from_variable = { var = SOV_zinoviev_influence value = 0.01 }
		custom_effect_tooltip = SOV_zinoviev_influence_one_decrease
		else = {
			multiply_variable = {
				SOV_zinoviev_influence = 0
			}
			custom_effect_tooltip = SOV_zinoviev_influence_min_decrease
		}
	}
}
SOV_trotskys_influence_one_decrease = {
	if = {
		limit = {
			check_variable = { SOV_trotskys_influence > 0.01 }
		}
		subtract_from_variable = { var = SOV_trotskys_influence value = 0.01 }
		custom_effect_tooltip = SOV_trotskys_influence_one_decrease
		else = {
			multiply_variable = {
				SOV_trotskys_influence = 0
			}
			custom_effect_tooltip = SOV_trotskys_influence_min_decrease
		}
	}
}

bukharin_takes_power_effect = {
	SOV_nikolay_bukharin = {
		add_country_leader_role = {
			promote_leader = yes
			country_leader = {
				ideology = leninism
				traits = { economy_reformer }
			}
		}						
	}
	set_country_flag = bukharin_takes_power
}
trotsky_takes_power_effect = {
	SOV_lev_trotsky = {
		add_country_leader_role = {
			promote_leader = yes
			country_leader = {
				ideology = leninism
				traits = { permanent_revolutionary accomplished_administrator }
			}
		}						
	}
	set_country_flag = trotsky_takes_power
}
bukharin_civilwar_large = {
	create_dynamic_country = {
		original_tag = SOV
		every_state = {
			limit = {
				is_core_of = SOV
			}
			add_core_of = SOB
		}
		set_capital = { state = 219 }
		set_politics = {
			ruling_party = communism
			elections_allowed = no
		}
		set_popularities = {
			democratic = 1
			neutrality = 9
			fascism = 4
			communism = 86
		}
		set_cosmetic_tag = SOB
		reserve_dynamic_country = yes
		if = {
			limit = {
				SOV = { has_idea = home_of_revolution }
			}
			add_ideas = home_of_revolution
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_precarious_country_high }
			}
			add_ideas = SOV_precarious_country_high
		}
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
		add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
		add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
		add_to_variable = { SOV_the_red_army_army_attack_factor = SOV.SOV_the_red_army_army_attack_factor }
		add_to_variable = { SOV_the_red_army_army_defence_factor = SOV.SOV_the_red_army_army_defence_factor }
		add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
		add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
		add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
		add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
		add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
		add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_fuel_consumption_factor = SOV.SOV_soviet_airforce_air_fuel_consumption_factor }
		add_to_variable = { SOV_soviet_airforce_air_cas_present_factor = SOV.SOV_soviet_airforce_air_cas_present_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_efficiency = SOV.SOV_soviet_airforce_air_mission_efficiency }
		add_to_variable = { SOV_soviet_airforce_air_nav_efficiency = SOV.SOV_soviet_airforce_air_nav_efficiency }
		add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		every_possible_country = {
			limit = {
				original_tag = SOV
				OR = {
					#육군(Army)
					has_character = SOV_ivan_konev
					has_character = SOV_mikhail_tukhachevsky
					has_character = SOV_yakov_cherevichenko
					has_character = SOV_andrey_vlasov
					has_character = SOV_maksim_purkayev
					has_character = SOV_kuzma_galitsky
					has_character = SOV_andrey_grechko
					has_character = SOV_vasily_chuykov
					#해군(Navy)
					has_character = SOV_arseny_golovko
					has_character = SOV_gordey_levchenko
					#조언자(advisor)
					has_character = SOV_karl_radek
					has_character = SOV_yevgeny_preobrazhensky
					has_character = SOV_aleksandr_shlyapnikov
					has_character = SOV_nikolay_bukharin
					has_character = SOV_lev_trotsky
					has_character = SOV_aleksey_rykov
					has_character = SOV_grigory_sokolnikov
					has_character = SOV_martemyan_ryutin
				}
			}
			SOV_ivan_konev = {
				set_nationality = SOB
			}
			SOV_mikhail_tukhachevsky = {
				set_nationality = SOB
			}
			SOV_yakov_cherevichenko = {
				set_nationality = SOB
			}
			SOV_andrey_vlasov = {
				set_nationality = SOB
			}
			SOV_maksim_purkayev = {
				set_nationality = SOB
			}
			SOV_kuzma_galitsky = {
				set_nationality = SOB
			}
			SOV_andrey_grechko = {
				set_nationality = SOB
			}
			SOV_vasily_chuykov = {
				set_nationality = SOB
			}
			SOV_arseny_golovko = {
				set_nationality = SOB
			}
			SOV_gordey_levchenko = {
				set_nationality = SOB
			}
			SOV_karl_radek = {
				set_nationality = SOB
			}
			SOV_yevgeny_preobrazhensky = {
				set_nationality = SOB
			}
			SOV_aleksandr_shlyapnikov = {
				set_nationality = SOB
			}
			SOV_nikolay_bukharin = {
				set_nationality = SOB
			}
			SOV_lev_trotsky = {
				set_nationality = SOB
			}
			SOV_aleksey_rykov = {
				set_nationality = SOB
			}
			SOV_grigory_sokolnikov = {
				set_nationality = SOB
			}
			SOV_martemyan_ryutin = {
				set_nationality = SOB
			}
		}
		SOV_nikolay_bukharin = {
			promote_character = yes						
		}
	}
	every_owned_state = {
		limit = {
			OR = {
				state = 233
				state = 827
				state = 821
				state = 828
				state = 232
				state = 235
				state = 234
				state = 237
				state = 238
				state = 218
				state = 245
				state = 217
				state = 236
				state = 265
				state = 260
				state = 829
				state = 220
				state = 239
				state = 257
				state = 258
				state = 255
				state = 810
				state = 208
				state = 209
				state = 210
				state = 207
				state = 263
				state = 244
				state = 195
				state = 246
				state = 406
				state = 407
				state = 401
				state = 584
				state = 832
				state = 830
				state = 742
				state = 587
				state = 823
				state = 831
				state = 585
				state = 405
				state = 732
				state = 402
				state = 563
				state = 564
				state = 566
				state = 567
				state = 404
				state = 586
				state = 589
				state = 881
				state = 588
				state = 654
				state = 213
				state = 215
				state = 216
				state = 264
			}
		}
		transfer_state_to = SOB
	}
	SOB = {
#		set_rule = {
#			can_join_factions = no
#		}
		inherit_technology = SOV
		SOV_nikolay_bukharin = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = leninism
					traits = { economy_reformer }
				}
			}						
		}
		division_template = {
			name = "Strelkovaya Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 } 	
			}
		}
		division_template = {
			name = "Gornostrelkovaya Diviziya"
			division_names_group = SOV_MNT_01

			regiments = {
				mountaineers = { x = 0 y = 0 }	
				mountaineers = { x = 0 y = 1 }
				mountaineers = { x = 0 y = 2 }	
				mountaineers = { x = 1 y = 0 }
				mountaineers = { x = 1 y = 1 }
				mountaineers = { x = 1 y = 2 }
				mountaineers = { x = 2 y = 0 }	
				mountaineers = { x = 2 y = 1 }	
				mountaineers = { x = 2 y = 2 }	
				mountaineers = { x = 3 y = 0 }	
				mountaineers = { x = 3 y = 1 }	
				mountaineers = { x = 3 y = 2 }	
			}
			support = {
				engineer = { x = 0 y = 0 }
				artillery = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Motostrelkovaya Diviziya"
			division_names_group = SOV_MOT_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				motorized = { x = 1 y = 0 }
				motorized = { x = 1 y = 1 }
				motorized = { x = 1 y = 2 }
			}
		}
		division_template = {
			name = "Kavaleriyskaya Diviziya"
			division_names_group = SOV_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
			}
		}
		division_template = {
			name = "Mekhanizirovaniy Korpus"
			division_names_group = SOV_MEC_01
			regiments = {
				light_armor = { x = 0 y = 0 }
				light_armor = { x = 0 y = 1 }
				light_armor = { x = 1 y = 0 }		
				light_armor = { x = 1 y = 1 }		
				light_armor = { x = 1 y = 2 }		
				motorized = { x = 2 y = 0 }		
				motorized = { x = 2 y = 1 }	
				motorized = { x = 2 y = 2 }		
				motorized = { x = 2 y = 3 }		
			}
		}
		division_template = {
			name = "Vozdushno-Desantnaya Brigada"
			division_names_group = SOV_PAR_01

			regiments = {
				paratrooper = { x = 0 y = 0 }
				paratrooper = { x = 0 y = 1 }
			}
		}
	}
	SOV = {
		transfer_units_fraction = {
			target = SOB
			size = 0.4
			stockpile_ratio = 0.4
			army_ratio = 0.4
			navy_ratio = 0.4
			air_ratio = 0.4
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		declare_war_on = {
			target = SOB
			type = civil_war
		}
		set_country_flag = soviet_civilwar
	}
}
trotsky_civilwar_large = {
	create_dynamic_country = {
		original_tag = SOV
		every_state = {
			limit = {
				is_core_of = SOV
			}
			add_core_of = SOT
		}
		set_capital = { state = 219 }
		set_politics = {
			ruling_party = communism
			elections_allowed = no
		}
		set_popularities = {
			democratic = 1
			neutrality = 9
			fascism = 4
			communism = 86
		}
		set_cosmetic_tag = SOT
		reserve_dynamic_country = yes
		if = {
			limit = {
				SOV = { has_idea = home_of_revolution }
			}
			add_ideas = home_of_revolution
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_precarious_country_high }
			}
			add_ideas = SOV_precarious_country_high
		}
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
		add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
		add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
		add_to_variable = { SOV_the_red_army_army_attack_factor = SOV.SOV_the_red_army_army_attack_factor }
		add_to_variable = { SOV_the_red_army_army_defence_factor = SOV.SOV_the_red_army_army_defence_factor }
		add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
		add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
		add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
		add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
		add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
		add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_fuel_consumption_factor = SOV.SOV_soviet_airforce_air_fuel_consumption_factor }
		add_to_variable = { SOV_soviet_airforce_air_cas_present_factor = SOV.SOV_soviet_airforce_air_cas_present_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_efficiency = SOV.SOV_soviet_airforce_air_mission_efficiency }
		add_to_variable = { SOV_soviet_airforce_air_nav_efficiency = SOV.SOV_soviet_airforce_air_nav_efficiency }
		add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		every_possible_country = {
			limit = {
				original_tag = SOV
				OR = {
					#육군(Army)
					has_character = SOV_ivan_konev
					has_character = SOV_mikhail_tukhachevsky
					has_character = SOV_yakov_cherevichenko
					has_character = SOV_andrey_vlasov
					has_character = SOV_maksim_purkayev
					has_character = SOV_kuzma_galitsky
					has_character = SOV_andrey_grechko
					has_character = SOV_vasily_chuykov
					#해군(Navy)
					has_character = SOV_arseny_golovko
					has_character = SOV_gordey_levchenko
					#조언자(advisor)
					has_character = SOV_karl_radek
					has_character = SOV_yevgeny_preobrazhensky
					has_character = SOV_aleksandr_shlyapnikov
					has_character = SOV_nikolay_bukharin
					has_character = SOV_lev_trotsky
					has_character = SOV_aleksey_rykov
					has_character = SOV_grigory_sokolnikov
					has_character = SOV_martemyan_ryutin
				}
			}
			SOV_ivan_konev = {
				set_nationality = SOT
			}
			SOV_mikhail_tukhachevsky = {
				set_nationality = SOT
			}
			SOV_yakov_cherevichenko = {
				set_nationality = SOT
			}
			SOV_andrey_vlasov = {
				set_nationality = SOT
			}
			SOV_maksim_purkayev = {
				set_nationality = SOT
			}
			SOV_kuzma_galitsky = {
				set_nationality = SOT
			}
			SOV_andrey_grechko = {
				set_nationality = SOT
			}
			SOV_vasily_chuykov = {
				set_nationality = SOT
			}
			SOV_arseny_golovko = {
				set_nationality = SOT
			}
			SOV_gordey_levchenko = {
				set_nationality = SOT
			}
			SOV_karl_radek = {
				set_nationality = SOT
			}
			SOV_yevgeny_preobrazhensky = {
				set_nationality = SOT
			}
			SOV_aleksandr_shlyapnikov = {
				set_nationality = SOT
			}
			SOV_nikolay_bukharin = {
				set_nationality = SOT
			}
			SOV_lev_trotsky = {
				set_nationality = SOT
			}
			SOV_aleksey_rykov = {
				set_nationality = SOT
			}
			SOV_grigory_sokolnikov = {
				set_nationality = SOT
			}
			SOV_martemyan_ryutin = {
				set_nationality = SOT
			}
		}
		SOV_lev_trotsky = {
			promote_character = yes						
		}
	}
	every_owned_state = {
		limit = {
			OR = {
				state = 588
				state = 590
				state = 572
				state = 654
				state = 882
				state = 40
				state = 569
				state = 568
				state = 567
				state = 564
				state = 563
				state = 566
				state = 578
				state = 570
				state = 571
				state = 403
				state = 653
				state = 580
				state = 577
				state = 579
				state = 581
				state = 398
				state = 573
				state = 408
				state = 409
				state = 657
				state = 651
				state = 582
				state = 583
				state = 406
				state = 407
				state = 652
				state = 251
				state = 401
				state = 637
				state = 874
				state = 931
				state = 207
				state = 243
				state = 242
				state = 210
				state = 810
				state = 246
				state = 209
			}
		}
		transfer_state_to = SOT
	}
	SOT = {
#		set_rule = {
#			can_join_factions = no
#		}
		inherit_technology = SOV
		SOV_lev_trotsky = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = leninism
					traits = { permanent_revolutionary accomplished_administrator }
				}
			}						
		}
		division_template = {
			name = "Strelkovaya Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 } 	
			}
		}
		division_template = {
			name = "Gornostrelkovaya Diviziya"
			division_names_group = SOV_MNT_01

			regiments = {
				mountaineers = { x = 0 y = 0 }	
				mountaineers = { x = 0 y = 1 }
				mountaineers = { x = 0 y = 2 }	
				mountaineers = { x = 1 y = 0 }
				mountaineers = { x = 1 y = 1 }
				mountaineers = { x = 1 y = 2 }
				mountaineers = { x = 2 y = 0 }	
				mountaineers = { x = 2 y = 1 }	
				mountaineers = { x = 2 y = 2 }	
				mountaineers = { x = 3 y = 0 }	
				mountaineers = { x = 3 y = 1 }	
				mountaineers = { x = 3 y = 2 }	
			}
			support = {
				engineer = { x = 0 y = 0 }
				artillery = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Motostrelkovaya Diviziya"
			division_names_group = SOV_MOT_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				motorized = { x = 1 y = 0 }
				motorized = { x = 1 y = 1 }
				motorized = { x = 1 y = 2 }
			}
		}
		division_template = {
			name = "Kavaleriyskaya Diviziya"
			division_names_group = SOV_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
			}
		}
		division_template = {
			name = "Mekhanizirovaniy Korpus"
			division_names_group = SOV_MEC_01
			regiments = {
				light_armor = { x = 0 y = 0 }
				light_armor = { x = 0 y = 1 }
				light_armor = { x = 1 y = 0 }		
				light_armor = { x = 1 y = 1 }		
				light_armor = { x = 1 y = 2 }		
				motorized = { x = 2 y = 0 }		
				motorized = { x = 2 y = 1 }	
				motorized = { x = 2 y = 2 }		
				motorized = { x = 2 y = 3 }		
			}
		}
		division_template = {
			name = "Vozdushno-Desantnaya Brigada"
			division_names_group = SOV_PAR_01

			regiments = {
				paratrooper = { x = 0 y = 0 }
				paratrooper = { x = 0 y = 1 }
			}
		}
	}
	SOV = {
		transfer_units_fraction = {
			target = SOT
			size = 0.4
			stockpile_ratio = 0.4
			army_ratio = 0.4
			navy_ratio = 0.4
			air_ratio = 0.4
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		declare_war_on = {
			target = SOT
			type = civil_war
		}
		set_country_flag = soviet_civilwar
	}
}
bukharin_civilwar_small = {
	create_dynamic_country = {
		original_tag = SOV
		every_state = {
			limit = {
				is_core_of = SOV
			}
			add_core_of = SOB
		}
		set_capital = { state = 219 }
		set_politics = {
			ruling_party = communism
			elections_allowed = no
		}
		set_popularities = {
			democratic = 1
			neutrality = 9
			fascism = 4
			communism = 86
		}
		set_cosmetic_tag = SOB
		reserve_dynamic_country = yes
		if = {
			limit = {
				SOV = { has_idea = home_of_revolution }
			}
			add_ideas = home_of_revolution
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_precarious_country_high }
			}
			add_ideas = SOV_precarious_country_high
		}
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
		add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
		add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
		add_to_variable = { SOV_the_red_army_army_attack_factor = SOV.SOV_the_red_army_army_attack_factor }
		add_to_variable = { SOV_the_red_army_army_defence_factor = SOV.SOV_the_red_army_army_defence_factor }
		add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
		add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
		add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
		add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
		add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
		add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_fuel_consumption_factor = SOV.SOV_soviet_airforce_air_fuel_consumption_factor }
		add_to_variable = { SOV_soviet_airforce_air_cas_present_factor = SOV.SOV_soviet_airforce_air_cas_present_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_efficiency = SOV.SOV_soviet_airforce_air_mission_efficiency }
		add_to_variable = { SOV_soviet_airforce_air_nav_efficiency = SOV.SOV_soviet_airforce_air_nav_efficiency }
		add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		every_possible_country = {
			limit = {
				original_tag = SOV
				OR = {
					#육군(Army)
					has_character = SOV_ivan_konev
					has_character = SOV_mikhail_tukhachevsky
					has_character = SOV_yakov_cherevichenko
					has_character = SOV_andrey_vlasov
					has_character = SOV_maksim_purkayev
					has_character = SOV_kuzma_galitsky
					has_character = SOV_andrey_grechko
					has_character = SOV_vasily_chuykov
					#해군(Navy)
					has_character = SOV_arseny_golovko
					has_character = SOV_gordey_levchenko
					#조언자(advisor)
					has_character = SOV_karl_radek
					has_character = SOV_yevgeny_preobrazhensky
					has_character = SOV_aleksandr_shlyapnikov
					has_character = SOV_nikolay_bukharin
					has_character = SOV_lev_trotsky
					has_character = SOV_aleksey_rykov
					has_character = SOV_grigory_sokolnikov
					has_character = SOV_martemyan_ryutin
				}
			}
			SOV_ivan_konev = {
				set_nationality = SOB
			}
			SOV_mikhail_tukhachevsky = {
				set_nationality = SOB
			}
			SOV_yakov_cherevichenko = {
				set_nationality = SOB
			}
			SOV_andrey_vlasov = {
				set_nationality = SOB
			}
			SOV_maksim_purkayev = {
				set_nationality = SOB
			}
			SOV_kuzma_galitsky = {
				set_nationality = SOB
			}
			SOV_andrey_grechko = {
				set_nationality = SOB
			}
			SOV_vasily_chuykov = {
				set_nationality = SOB
			}
			SOV_arseny_golovko = {
				set_nationality = SOB
			}
			SOV_gordey_levchenko = {
				set_nationality = SOB
			}
			SOV_karl_radek = {
				set_nationality = SOB
			}
			SOV_yevgeny_preobrazhensky = {
				set_nationality = SOB
			}
			SOV_aleksandr_shlyapnikov = {
				set_nationality = SOB
			}
			SOV_nikolay_bukharin = {
				set_nationality = SOB
			}
			SOV_lev_trotsky = {
				set_nationality = SOB
			}
			SOV_aleksey_rykov = {
				set_nationality = SOB
			}
			SOV_grigory_sokolnikov = {
				set_nationality = SOB
			}
			SOV_martemyan_ryutin = {
				set_nationality = SOB
			}
		}
		SOV_nikolay_bukharin = {
			promote_character = yes						
		}
	}
	every_owned_state = {
		limit = {
			OR = {
				state = 233
				state = 827
				state = 821
				state = 828
				state = 232
				state = 235
				state = 234
				state = 237
				state = 238
				state = 218
				state = 245
				state = 217
				state = 236
				state = 265
				state = 829
				state = 239
				state = 810
				state = 208
				state = 209
				state = 210
				state = 207
				state = 263
				state = 244
				state = 246
				state = 406
				state = 407
				state = 401
				state = 584
				state = 832
				state = 830
				state = 742
				state = 587
				state = 823
				state = 831
				state = 585
				state = 405
				state = 732
				state = 402
				state = 404
				state = 586
				state = 589
				state = 881
				state = 588
				state = 654
				state = 213
				state = 215
				state = 216
				state = 264
			}
		}
		transfer_state_to = SOB
	}
	SOB = {
#		set_rule = {
#			can_join_factions = no
#		}
		inherit_technology = SOV
		SOV_nikolay_bukharin = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = leninism
					traits = { economy_reformer }
				}
			}						
		}
		division_template = {
			name = "Strelkovaya Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 } 	
			}
		}
		division_template = {
			name = "Gornostrelkovaya Diviziya"
			division_names_group = SOV_MNT_01

			regiments = {
				mountaineers = { x = 0 y = 0 }	
				mountaineers = { x = 0 y = 1 }
				mountaineers = { x = 0 y = 2 }	
				mountaineers = { x = 1 y = 0 }
				mountaineers = { x = 1 y = 1 }
				mountaineers = { x = 1 y = 2 }
				mountaineers = { x = 2 y = 0 }	
				mountaineers = { x = 2 y = 1 }	
				mountaineers = { x = 2 y = 2 }	
				mountaineers = { x = 3 y = 0 }	
				mountaineers = { x = 3 y = 1 }	
				mountaineers = { x = 3 y = 2 }	
			}
			support = {
				engineer = { x = 0 y = 0 }
				artillery = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Motostrelkovaya Diviziya"
			division_names_group = SOV_MOT_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				motorized = { x = 1 y = 0 }
				motorized = { x = 1 y = 1 }
				motorized = { x = 1 y = 2 }
			}
		}
		division_template = {
			name = "Kavaleriyskaya Diviziya"
			division_names_group = SOV_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
			}
		}
		division_template = {
			name = "Mekhanizirovaniy Korpus"
			division_names_group = SOV_MEC_01
			regiments = {
				light_armor = { x = 0 y = 0 }
				light_armor = { x = 0 y = 1 }
				light_armor = { x = 1 y = 0 }		
				light_armor = { x = 1 y = 1 }		
				light_armor = { x = 1 y = 2 }		
				motorized = { x = 2 y = 0 }		
				motorized = { x = 2 y = 1 }	
				motorized = { x = 2 y = 2 }		
				motorized = { x = 2 y = 3 }		
			}
		}
		division_template = {
			name = "Vozdushno-Desantnaya Brigada"
			division_names_group = SOV_PAR_01

			regiments = {
				paratrooper = { x = 0 y = 0 }
				paratrooper = { x = 0 y = 1 }
			}
		}
	}
	SOV = {
		transfer_units_fraction = {
			target = SOB
			size = 0.2
			stockpile_ratio = 0.2
			army_ratio = 0.2
			navy_ratio = 0.2
			air_ratio = 0.15
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		declare_war_on = {
			target = SOB
			type = civil_war
		}
		set_country_flag = soviet_civilwar
	}
}
trotsky_civilwar_small = {
	create_dynamic_country = {
		original_tag = SOV
		every_state = {
			limit = {
				is_core_of = SOV
			}
			add_core_of = SOT
		}
		set_capital = { state = 219 }
		set_politics = {
			ruling_party = communism
			elections_allowed = no
		}
		set_popularities = {
			democratic = 1
			neutrality = 9
			fascism = 4
			communism = 86
		}
		set_cosmetic_tag = SOT
		reserve_dynamic_country = yes
		if = {
			limit = {
				SOV = { has_idea = home_of_revolution }
			}
			add_ideas = home_of_revolution
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_precarious_country_high }
			}
			add_ideas = SOV_precarious_country_high
		}
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
		add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
		add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
		add_to_variable = { SOV_the_red_army_army_attack_factor = SOV.SOV_the_red_army_army_attack_factor }
		add_to_variable = { SOV_the_red_army_army_defence_factor = SOV.SOV_the_red_army_army_defence_factor }
		add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
		add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
		add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
		add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
		add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
		add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_fuel_consumption_factor = SOV.SOV_soviet_airforce_air_fuel_consumption_factor }
		add_to_variable = { SOV_soviet_airforce_air_cas_present_factor = SOV.SOV_soviet_airforce_air_cas_present_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_efficiency = SOV.SOV_soviet_airforce_air_mission_efficiency }
		add_to_variable = { SOV_soviet_airforce_air_nav_efficiency = SOV.SOV_soviet_airforce_air_nav_efficiency }
		add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		every_possible_country = {
			limit = {
				original_tag = SOV
				OR = {
					#육군(Army)
					has_character = SOV_ivan_konev
					has_character = SOV_mikhail_tukhachevsky
					has_character = SOV_yakov_cherevichenko
					has_character = SOV_andrey_vlasov
					has_character = SOV_maksim_purkayev
					has_character = SOV_kuzma_galitsky
					has_character = SOV_andrey_grechko
					has_character = SOV_vasily_chuykov
					#해군(Navy)
					has_character = SOV_arseny_golovko
					has_character = SOV_gordey_levchenko
					#조언자(advisor)
					has_character = SOV_karl_radek
					has_character = SOV_yevgeny_preobrazhensky
					has_character = SOV_aleksandr_shlyapnikov
					has_character = SOV_nikolay_bukharin
					has_character = SOV_lev_trotsky
					has_character = SOV_aleksey_rykov
					has_character = SOV_grigory_sokolnikov
					has_character = SOV_martemyan_ryutin
				}
			}
			SOV_ivan_konev = {
				set_nationality = SOT
			}
			SOV_mikhail_tukhachevsky = {
				set_nationality = SOT
			}
			SOV_yakov_cherevichenko = {
				set_nationality = SOT
			}
			SOV_andrey_vlasov = {
				set_nationality = SOT
			}
			SOV_maksim_purkayev = {
				set_nationality = SOT
			}
			SOV_kuzma_galitsky = {
				set_nationality = SOT
			}
			SOV_andrey_grechko = {
				set_nationality = SOT
			}
			SOV_vasily_chuykov = {
				set_nationality = SOT
			}
			SOV_arseny_golovko = {
				set_nationality = SOT
			}
			SOV_gordey_levchenko = {
				set_nationality = SOT
			}
			SOV_karl_radek = {
				set_nationality = SOT
			}
			SOV_yevgeny_preobrazhensky = {
				set_nationality = SOT
			}
			SOV_aleksandr_shlyapnikov = {
				set_nationality = SOT
			}
			SOV_nikolay_bukharin = {
				set_nationality = SOT
			}
			SOV_lev_trotsky = {
				set_nationality = SOT
			}
			SOV_aleksey_rykov = {
				set_nationality = SOT
			}
			SOV_grigory_sokolnikov = {
				set_nationality = SOT
			}
			SOV_martemyan_ryutin = {
				set_nationality = SOT
			}
		}
		SOV_lev_trotsky = {
			promote_character = yes						
		}
	}
	every_owned_state = {
		limit = {
			OR = {
				state = 588
				state = 590
				state = 572
				state = 654
				state = 882
				state = 40
				state = 569
				state = 568
				state = 567
				state = 564
				state = 563
				state = 566
				state = 578
				state = 570
				state = 571
				state = 403
				state = 653
				state = 580
				state = 577
				state = 398
				state = 573
				state = 408
				state = 409
				state = 657
				state = 651
				state = 582
				state = 583
				state = 406
				state = 407
				state = 652
			}
		}
		transfer_state_to = SOT
	}
	SOT = {
#		set_rule = {
#			can_join_factions = no
#		}
		inherit_technology = SOV
		SOV_lev_trotsky = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = leninism
					traits = { permanent_revolutionary accomplished_administrator }
				}
			}						
		}
		division_template = {
			name = "Strelkovaya Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 } 	
			}
		}
		division_template = {
			name = "Gornostrelkovaya Diviziya"
			division_names_group = SOV_MNT_01

			regiments = {
				mountaineers = { x = 0 y = 0 }	
				mountaineers = { x = 0 y = 1 }
				mountaineers = { x = 0 y = 2 }	
				mountaineers = { x = 1 y = 0 }
				mountaineers = { x = 1 y = 1 }
				mountaineers = { x = 1 y = 2 }
				mountaineers = { x = 2 y = 0 }	
				mountaineers = { x = 2 y = 1 }	
				mountaineers = { x = 2 y = 2 }	
				mountaineers = { x = 3 y = 0 }	
				mountaineers = { x = 3 y = 1 }	
				mountaineers = { x = 3 y = 2 }	
			}
			support = {
				engineer = { x = 0 y = 0 }
				artillery = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Motostrelkovaya Diviziya"
			division_names_group = SOV_MOT_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				motorized = { x = 1 y = 0 }
				motorized = { x = 1 y = 1 }
				motorized = { x = 1 y = 2 }
			}
		}
		division_template = {
			name = "Kavaleriyskaya Diviziya"
			division_names_group = SOV_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
			}
		}
		division_template = {
			name = "Mekhanizirovaniy Korpus"
			division_names_group = SOV_MEC_01
			regiments = {
				light_armor = { x = 0 y = 0 }
				light_armor = { x = 0 y = 1 }
				light_armor = { x = 1 y = 0 }		
				light_armor = { x = 1 y = 1 }		
				light_armor = { x = 1 y = 2 }		
				motorized = { x = 2 y = 0 }		
				motorized = { x = 2 y = 1 }	
				motorized = { x = 2 y = 2 }		
				motorized = { x = 2 y = 3 }		
			}
		}
		division_template = {
			name = "Vozdushno-Desantnaya Brigada"
			division_names_group = SOV_PAR_01

			regiments = {
				paratrooper = { x = 0 y = 0 }
				paratrooper = { x = 0 y = 1 }
			}
		}
	}
	SOV = {
		transfer_units_fraction = {
			target = SOT
			size = 0.2
			stockpile_ratio = 0.2
			army_ratio = 0.2
			navy_ratio = 0.2
			air_ratio = 0.15
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		declare_war_on = {
			target = SOT
			type = civil_war
		}
		set_country_flag = soviet_civilwar
	}
}
trotsky_civilwar_focus = {
	create_dynamic_country = {
		original_tag = SOV
		every_state = {
			limit = {
				is_core_of = SOV
			}
			add_core_of = SOS
		}
		set_capital = { state = 219 }
		set_politics = {
			ruling_party = communism
			elections_allowed = no
		}
		set_popularities = {
			democratic = 1
			neutrality = 9
			fascism = 4
			communism = 86
		}
		load_focus_tree = soviet_focus
		complete_national_focus = SOV_heart_of_iron
		complete_national_focus = SOV_stalinism
		complete_national_focus = SOV_inheritor_of_lenin
		complete_national_focus = SOV_socialism_in_one_country
		complete_national_focus = SOV_fight_against_bukharin
		set_cosmetic_tag = SOS
		reserve_dynamic_country = yes
		if = {
			limit = {
				SOV = { has_idea = home_of_revolution }
			}
			add_ideas = home_of_revolution
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_precarious_country_high }
			}
			add_ideas = SOV_precarious_country_high
		}
		add_ideas = Soviet_Civil_War
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
		add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
		add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
		add_to_variable = { SOV_the_red_army_army_attack_factor = SOV.SOV_the_red_army_army_attack_factor }
		add_to_variable = { SOV_the_red_army_army_defence_factor = SOV.SOV_the_red_army_army_defence_factor }
		add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
		add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
		add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
		add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
		add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
		add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_fuel_consumption_factor = SOV.SOV_soviet_airforce_air_fuel_consumption_factor }
		add_to_variable = { SOV_soviet_airforce_air_cas_present_factor = SOV.SOV_soviet_airforce_air_cas_present_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_efficiency = SOV.SOV_soviet_airforce_air_mission_efficiency }
		add_to_variable = { SOV_soviet_airforce_air_nav_efficiency = SOV.SOV_soviet_airforce_air_nav_efficiency }
		add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		every_possible_country = {
			limit = {
				original_tag = SOV
			}
			every_character = {
				limit = {
					NOT = { has_character_flag = trotsky_conciliation }
				}
				set_nationality = SOS
			}
		}
		SOV_iosif_stalin = {
			promote_character = yes						
		}
	}
	every_owned_state = {
		limit = {
			NOT = {
				state = 588
				state = 590
				state = 572
				state = 654
				state = 882
				state = 40
				state = 569
				state = 568
				state = 567
				state = 564
				state = 563
				state = 566
				state = 578
				state = 570
				state = 571
				state = 403
				state = 653
				state = 580
				state = 577
				state = 579
				state = 581
				state = 398
				state = 573
				state = 408
				state = 409
				state = 657
				state = 651
				state = 582
				state = 583
				state = 406
				state = 407
				state = 652
				state = 251
				state = 401
				state = 637
				state = 874
				state = 931
				state = 207
				state = 243
				state = 242
				state = 210
				state = 810
				state = 246
				state = 209
				state = 263
				state = 208
				state = 217
				state = 236
				state = 237
				state = 232
				state = 821
				state = 828
				state = 235
				state = 827
				state = 233
				state = 208
				state = 234
				state = 238
				state = 195
				state = 244
				state = 264
				state = 218
				state = 245
				state = 224
				state = 260
				state = 265
			}
		}
		transfer_state_to = SOS
	}
	SOS = {
#		set_rule = {
#			can_join_factions = no
#		}
		inherit_technology = SOV
		set_country_flag = select_play_character
		division_template = {
			name = "Strelkovaya Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 } 	
			}
		}
		division_template = {
			name = "Gornostrelkovaya Diviziya"
			division_names_group = SOV_MNT_01

			regiments = {
				mountaineers = { x = 0 y = 0 }	
				mountaineers = { x = 0 y = 1 }
				mountaineers = { x = 0 y = 2 }	
				mountaineers = { x = 1 y = 0 }
				mountaineers = { x = 1 y = 1 }
				mountaineers = { x = 1 y = 2 }
				mountaineers = { x = 2 y = 0 }	
				mountaineers = { x = 2 y = 1 }	
				mountaineers = { x = 2 y = 2 }	
				mountaineers = { x = 3 y = 0 }	
				mountaineers = { x = 3 y = 1 }	
				mountaineers = { x = 3 y = 2 }	
			}
			support = {
				engineer = { x = 0 y = 0 }
				artillery = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Motostrelkovaya Diviziya"
			division_names_group = SOV_MOT_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				motorized = { x = 1 y = 0 }
				motorized = { x = 1 y = 1 }
				motorized = { x = 1 y = 2 }
			}
		}
		division_template = {
			name = "Kavaleriyskaya Diviziya"
			division_names_group = SOV_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
			}
		}
		division_template = {
			name = "Mekhanizirovaniy Korpus"
			division_names_group = SOV_MEC_01
			regiments = {
				light_armor = { x = 0 y = 0 }
				light_armor = { x = 0 y = 1 }
				light_armor = { x = 1 y = 0 }		
				light_armor = { x = 1 y = 1 }		
				light_armor = { x = 1 y = 2 }		
				motorized = { x = 2 y = 0 }		
				motorized = { x = 2 y = 1 }	
				motorized = { x = 2 y = 2 }		
				motorized = { x = 2 y = 3 }		
			}
		}
		division_template = {
			name = "Vozdushno-Desantnaya Brigada"
			division_names_group = SOV_PAR_01

			regiments = {
				paratrooper = { x = 0 y = 0 }
				paratrooper = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Extrany Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
			}
			priority = 0
			is_locked = yes
		}
		247 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		219 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		220 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		250 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		399 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		584 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		516 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		214 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
		880 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOS
				count = 4
			}
		}
	}
	SOV = {
		transfer_units_fraction = {
			target = SOS
			size = 0.3
			stockpile_ratio = 0.3
			army_ratio = 0.3
			navy_ratio = 0.3
			air_ratio = 0.3
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		add_ideas = Soviet_Civil_War
		set_cosmetic_tag = SOT
		declare_war_on = {
			target = SOS
			type = civil_war
		}
		SOV_lev_trotsky = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = leninism
					traits = { permanent_revolutionary accomplished_administrator }
				}
			}
		}
		set_global_flag = soviet_civilwar_focus
		division_template = {
			name = "Extrany Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
			}
			priority = 0
			is_locked = yes 
		}
		264 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		246 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		242 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		243 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		224 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		260 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		217 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		651 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		588 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		234 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		406 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		563 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		580 = {
			create_unit = {
				division = "name = \"1. Extrany Diviziya\" division_template = \"Extrany Diviziya\" start_experience_factor = 0.1"
				owner = SOT
				count = 4
			}
		}
		if = {
			limit = {
				has_country_flag = additional_divisions_in_eastern_russia
			}
			567 = {
				create_unit = {
					division = "name = \"1. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"2. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"3. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"4. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
			}
		}
		if = {
			limit = {
				has_country_flag = additional_divisions_in_western_russia
			}
			246 = {
				create_unit = {
					division = "name = \"5. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"6. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"7. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"8. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
			}
		}
		if = {
			limit = {
				has_country_flag = additional_divisions_in_middle_russia
			}
			398 = {
				create_unit = {
					division = "name = \"9. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"10. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"11. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"12. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
			}
		}
		if = {
			limit = {
				has_country_flag = additional_divisions_in_middle_asia
			}
			583 = {
				create_unit = {
					division = "name = \"13. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"14. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"15. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
				create_unit = {
					division = "name = \"16. Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
					owner = SOT
				}
			}
		}
	}
}
bukharin_civilwar_focus = {
	create_dynamic_country = {
		original_tag = SOV
		every_state = {
			limit = {
				is_core_of = SOV
			}
			add_core_of = SOB
		}
		set_capital = { state = 219 }
		set_politics = {
			ruling_party = communism
			elections_allowed = no
		}
		set_popularities = {
			democratic = 1
			neutrality = 0
			fascism = 13
			communism = 86
		}
		load_focus_tree = soviet_focus
		complete_national_focus = SOV_clique_of_bukharin
		complete_national_focus = SOV_trotskist_clique_absorption
		complete_national_focus = SOV_People_First
		complete_national_focus = SOV_controling_NKVD
		complete_national_focus = SOV_preparations_for_a_coup
		complete_national_focus = SOV_careful_preparation
		complete_national_focus = SOV_military_conciliation
		complete_national_focus = SOV_the_excellent_successor
		complete_national_focus = SOV_dominate_administration
		complete_national_focus = SOV_more_elaborate_plan
		complete_national_focus = SOV_operation_katyusha
		complete_national_focus = SOV_divided_government
		set_cosmetic_tag = SOB
		reserve_dynamic_country = yes
		if = {
			limit = {
				SOV = { has_idea = home_of_revolution }
			}
			add_ideas = home_of_revolution
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
		if = {
			limit = {
				SOV = { has_idea = SOV_precarious_country_high }
			}
			add_ideas = SOV_precarious_country_high
		}
		add_ideas = Soviet_Civil_War
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = SOV.SOV_the_red_army_mobilization_laws_cost_factor }
		add_to_variable = { SOV_the_red_army_army_org_factor = SOV.SOV_the_red_army_army_org_factor }
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = SOV.SOV_the_red_army_experience_gain_army_factor }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = SOV.SOV_the_red_army_experience_loss_factor }
		add_to_variable = { SOV_the_red_army_mobilization_speed = SOV.SOV_the_red_army_mobilization_speed }
		add_to_variable = { SOV_the_red_army_army_attack_factor = SOV.SOV_the_red_army_army_attack_factor }
		add_to_variable = { SOV_the_red_army_army_defence_factor = SOV.SOV_the_red_army_army_defence_factor }
		add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = SOV.SOV_red_fleet_navy_refit_ic_cost }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = SOV.SOV_red_fleet_repair_speed_factor }
		add_to_variable = { SOV_red_fleet_navy_visibility = SOV.SOV_red_fleet_navy_visibility }
		add_to_variable = { SOV_red_fleet_screening_efficiency = SOV.SOV_red_fleet_screening_efficiency }
		add_to_variable = { SOV_red_fleet_positioning = SOV.SOV_red_fleet_positioning }
		add_to_variable = { SOV_red_fleet_naval_coordination = SOV.SOV_red_fleet_naval_coordination }
		add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = SOV.SOV_soviet_airforce_air_accidents_factor }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = SOV.SOV_soviet_airforce_air_ace_generation_chance_factor }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = SOV.SOV_soviet_airforce_air_night_penalty }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = SOV.SOV_soviet_airforce_air_weather_penalty }
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = SOV.SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = SOV.SOV_soviet_airforce_air_mission_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = SOV.SOV_soviet_airforce_air_training_xp_gain_factor }
		add_to_variable = { SOV_soviet_airforce_air_fuel_consumption_factor = SOV.SOV_soviet_airforce_air_fuel_consumption_factor }
		add_to_variable = { SOV_soviet_airforce_air_cas_present_factor = SOV.SOV_soviet_airforce_air_cas_present_factor }
		add_to_variable = { SOV_soviet_airforce_air_mission_efficiency = SOV.SOV_soviet_airforce_air_mission_efficiency }
		add_to_variable = { SOV_soviet_airforce_air_nav_efficiency = SOV.SOV_soviet_airforce_air_nav_efficiency }
		add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		every_possible_country = {
			limit = {
				original_tag = SOV
				OR = {
					has_character = SOV_nikolay_bukharin
					has_character = SOV_aleksey_rykov
					has_character = SOV_mikhail_tomsky
					has_character = SOV_martemyan_ryutin
				}
			}
			SOV_nikolay_bukharin = {
				set_nationality = SOB
			}
			SOV_mikhail_tomsky = {
				set_nationality = SOB
			}
			SOV_aleksey_rykov = {
				set_nationality = SOB
			}
			SOV_martemyan_ryutin = {
				set_nationality = SOB
			}
		}
		SOV_nikolay_bukharin = {
			promote_character = yes						
		}
	}
	every_state = {
		limit = {
			OR = {
				is_controlled_by = SOT
				is_controlled_by = SOS
			}
			OR = {
				state = 220
				state = 224
				state = 222
				state = 260
				state = 258
				state = 223
				state = 205
				state = 218
				state = 245
				state = 265
				state = 239
				state = 829
				state = 217
				state = 238
				state = 234
				state = 233
				state = 827
				state = 828
				state = 821
				state = 232
				state = 235
				state = 237
				state = 236
				state = 257
				state = 255
				state = 254
				state = 406
				state = 407
				state = 401
				state = 584
				state = 832
				state = 823
				state = 831
				state = 587
				state = 402
				state = 830
				state = 585
				state = 742
				state = 652
			}
		}
		transfer_state_to = SOB
	}
	SOB = {
#		set_rule = {
#			can_join_factions = no
#		}
		set_country_flag = select_play_character
		inherit_technology = SOV
		SOV_nikolay_bukharin = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = leninism
					traits = { economy_reformer }
				}
			}						
		}
		division_template = {
			name = "Strelkovaya Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 } 	
			}
		}
		division_template = {
			name = "Gornostrelkovaya Diviziya"
			division_names_group = SOV_MNT_01

			regiments = {
				mountaineers = { x = 0 y = 0 }	
				mountaineers = { x = 0 y = 1 }
				mountaineers = { x = 0 y = 2 }	
				mountaineers = { x = 1 y = 0 }
				mountaineers = { x = 1 y = 1 }
				mountaineers = { x = 1 y = 2 }
				mountaineers = { x = 2 y = 0 }	
				mountaineers = { x = 2 y = 1 }	
				mountaineers = { x = 2 y = 2 }	
				mountaineers = { x = 3 y = 0 }	
				mountaineers = { x = 3 y = 1 }	
				mountaineers = { x = 3 y = 2 }	
			}
			support = {
				engineer = { x = 0 y = 0 }
				artillery = { x = 0 y = 1 }
			}
		}
		division_template = {
			name = "Motostrelkovaya Diviziya"
			division_names_group = SOV_MOT_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				motorized = { x = 1 y = 0 }
				motorized = { x = 1 y = 1 }
				motorized = { x = 1 y = 2 }
			}
		}
		division_template = {
			name = "Kavaleriyskaya Diviziya"
			division_names_group = SOV_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				cavalry = { x = 1 y = 1 }
			}
		}
		division_template = {
			name = "Mekhanizirovaniy Korpus"
			division_names_group = SOV_MEC_01
			regiments = {
				light_armor = { x = 0 y = 0 }
				light_armor = { x = 0 y = 1 }
				light_armor = { x = 1 y = 0 }		
				light_armor = { x = 1 y = 1 }		
				light_armor = { x = 1 y = 2 }		
				motorized = { x = 2 y = 0 }		
				motorized = { x = 2 y = 1 }	
				motorized = { x = 2 y = 2 }		
				motorized = { x = 2 y = 3 }		
			}
		}
		division_template = {
			name = "Vozdushno-Desantnaya Brigada"
			division_names_group = SOV_PAR_01

			regiments = {
				paratrooper = { x = 0 y = 0 }
				paratrooper = { x = 0 y = 1 }
			}
		}
	}
	SOS = {
		if = {
			limit = {
				is_ai = no
			}
			transfer_units_fraction = {
				target = SOB
				size = 0.1
				stockpile_ratio = 0.2
				army_ratio = 0.2
				navy_ratio = 0.2
				air_ratio = 0.1
				keep_unit_leaders_trigger = {
					always = yes
				}
			}
		}
		else = {
			transfer_units_fraction = {
				target = SOB
				size = 0.1
				stockpile_ratio = 0.05
				army_ratio = 0.05
				navy_ratio = 0.05
				air_ratio = 0.05
				keep_unit_leaders_trigger = {
					always = yes
				}
			}
		}
		declare_war_on = {
			target = SOB
			type = civil_war
		}
	}
	SOT = {
		transfer_units_fraction = {
			target = SOB
			size = 0.1
			stockpile_ratio = 0.2
			army_ratio = 0.2
			navy_ratio = 0.2
			air_ratio = 0.1
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		declare_war_on = {
			target = SOB
			type = civil_war
		}
	}
}

Second_Russian_Civilwar = {
	set_global_flag = second_russian_civilwar
	every_owned_state = {
		limit = {
			has_state_flag = RUS_state_civilwar
		}
		add_core_of = RUS
		transfer_state_to = RUS
	}
	RUS = {
		inherit_technology = SOV
		random_owned_controlled_state = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
	}
	SOV = {
		#add_ideas = Soviet_Civil_War
		transfer_units_fraction = {
			target = RUS
			size = 0.6
			stockpile_ratio = 0.6
			army_ratio = 0.6
			navy_ratio = 0.6
			air_ratio = 0.6
			keep_unit_leaders_trigger = {
				always = yes
			}
		}
		declare_war_on = {
			target = RUS
			type = civil_war
		}
		every_possible_country = {
			limit = {
				original_tag = SOV
			}
			every_character = {
				limit = {
					has_character_flag = RUS_before_civilwar
				}
				set_nationality = RUS
			}
		}
		uncomplete_national_focus = {
			focus = SOV_debris_of_the_russian_republic
			uncomplete_children = yes
		}
		complete_national_focus = SOV_heart_of_iron
		complete_national_focus = SOV_stalinism
		complete_national_focus = SOV_inheritor_of_lenin
		complete_national_focus = SOV_socialism_in_one_country
		complete_national_focus = SOV_fight_against_bukharin
		if = {
			limit = {
				MON = { is_subject_of = SOV }
			}
			end_puppet = MON
			MON = { leave_faction = yes }
		}
		if = {
			limit = {
				TAN = { is_subject_of = SOV }
			}
			end_puppet = TAN
			TAN = { leave_faction = yes }
		}
		division_template = {
			name = "Extrany Diviziya"
			division_names_group = SOV_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
			}
			priority = 0
			is_locked = yes 
		}
		247 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		219 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		220 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		250 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		399 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		584 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		516 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		214 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		880 = {
			create_unit = {
				division = "division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = SOS
				count = 4
			}
		}
		hidden_effect = {
			every_country = {
				limit = { original_tag = RUS }
				delete_unit_template_and_units = {
					division_template = "NKVD Pogranichnaya Diviziya"
					disband = yes
				}
			}
		}
	}
}

#
# Army
#
add_2_5_army_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_army_professionalism_var > 97.4 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_army_professionalism_var
			value = 100
			tooltip = sov_add_2_5_army_professionalism
		}
		set_variable = { SOV_the_red_army_experience_gain_army_factor = 0.1 }
		set_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.2 }
		set_variable = { SOV_the_red_army_experience_loss_factor = -0.2 }
		set_variable = { SOV_the_red_army_dig_in_speed_factor = 0.1 }
		custom_effect_tooltip = SOV_full_army_professionalism
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_professionalism_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_professionalism_var > 97.4 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_professionalism_too_high_flag }
        }
        # Increase Professionalism
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 2.5
			tooltip = sov_add_2_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = 0.005 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = 0.005 }
		custom_effect_tooltip = SOV_add_2_5_army_professionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase Professionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 2.5
			tooltip = sov_add_2_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = 0.005 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = 0.005 }
		custom_effect_tooltip = SOV_add_2_5_army_professionalism_var
    }
}
remove_2_5_army_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_army_professionalism_var < 2.6 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_army_professionalism_var
			value = 0
			tooltip = sov_remove_2_5_army_professionalism
		}
		set_variable = { SOV_the_red_army_experience_gain_army_factor = -0.1 }
		set_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.2 }
		set_variable = { SOV_the_red_army_experience_loss_factor = 0.2 }
		set_variable = { SOV_the_red_army_dig_in_speed_factor = -0.1 }
		custom_effect_tooltip = SOV_no_army_professionalism
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_professionalism_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_professionalism_var < 2.6 }
            }
            has_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
        }
        # Decrease Professionalism
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = -0.005 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = -0.005 }
		custom_effect_tooltip = SOV_remove_2_5_army_professionalism_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease Professionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = -0.005 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = -0.005 }
		custom_effect_tooltip = SOV_remove_2_5_army_professionalism_var
    }
}
add_5_army_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_army_professionalism_var > 94 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_army_professionalism_var
			value = 100
			tooltip = sov_add_5_army_professionalism
		}
		set_variable = { SOV_the_red_army_experience_gain_army_factor = 0.1 }
		set_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.2 }
		set_variable = { SOV_the_red_army_experience_loss_factor = -0.2 }
		set_variable = { SOV_the_red_army_dig_in_speed_factor = 0.1 }
		custom_effect_tooltip = SOV_full_army_professionalism
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_professionalism_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_professionalism_var > 94 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_professionalism_too_high_flag }
        }
        # Increase Professionalism
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 5
			tooltip = sov_add_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = 0.01 }
		custom_effect_tooltip = SOV_add_5_army_professionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase Professionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 5
			tooltip = sov_add_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = 0.01 }
		custom_effect_tooltip = SOV_add_5_army_professionalism_var
    }
}
remove_5_army_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_army_professionalism_var < 6 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_army_professionalism_var
			value = 0
			tooltip = sov_remove_5_army_professionalism
		}
		set_variable = { SOV_the_red_army_experience_gain_army_factor = -0.1 }
		set_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.2 }
		set_variable = { SOV_the_red_army_experience_loss_factor = 0.2 }
		set_variable = { SOV_the_red_army_dig_in_speed_factor = -0.1 }
		custom_effect_tooltip = SOV_no_army_professionalism
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_professionalism_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_professionalism_var < 6 }
            }
            has_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
        }
        # Decrease Professionalism
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -5
			tooltip = sov_remove_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = -0.01 }
		custom_effect_tooltip = SOV_remove_5_army_professionalism_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease Professionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -5
			tooltip = sov_remove_5_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = -0.01 }
		custom_effect_tooltip = SOV_remove_5_army_professionalism_var
    }
}
add_10_army_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_army_professionalism_var > 89 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_army_professionalism_var
			value = 100
			tooltip = sov_add_10_army_professionalism
		}
		set_variable = { SOV_the_red_army_experience_gain_army_factor = 0.1 }
		set_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.2 }
		set_variable = { SOV_the_red_army_experience_loss_factor = -0.2 }
		set_variable = { SOV_the_red_army_dig_in_speed_factor = 0.1 }
		custom_effect_tooltip = SOV_full_army_professionalism
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_professionalism_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_professionalism_var > 89 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_professionalism_too_high_flag }
        }
        # Increase Professionalism
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 10
			tooltip = sov_add_10_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = 0.02 }
		custom_effect_tooltip = SOV_add_10_army_professionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase Professionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 10
			tooltip = sov_add_10_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = 0.02 }
		custom_effect_tooltip = SOV_add_10_army_professionalism_var
    }
}
remove_10_army_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_army_professionalism_var < 11 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_army_professionalism_var
			value = 0
			tooltip = sov_remove_10_army_professionalism
		}
		set_variable = { SOV_the_red_army_experience_gain_army_factor = -0.1 }
		set_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.2 }
		set_variable = { SOV_the_red_army_experience_loss_factor = 0.2 }
		set_variable = { SOV_the_red_army_dig_in_speed_factor = -0.1 }
		custom_effect_tooltip = SOV_no_army_professionalism
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_professionalism_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_professionalism_var < 11 }
            }
            has_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
        }
        # Decrease Professionalism
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -10
			tooltip = sov_remove_10_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = -0.02 }
		custom_effect_tooltip = SOV_remove_10_army_professionalism_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease Professionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -10
			tooltip = sov_remove_10_army_professionalism
		}
		add_to_variable = { SOV_the_red_army_experience_gain_army_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_land_doctrine_cost_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_experience_loss_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_dig_in_speed_factor = -0.02 }
		custom_effect_tooltip = SOV_remove_10_army_professionalism_var
    }
}
add_15_army_professionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_army_professionalism_var > 84
			}
		}
		set_variable = {
			var = SOV_army_professionalism_var
			value = 100
			tooltip = sov_add_15_army_professionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = 15
			tooltip = sov_add_15_army_professionalism
		}
	}
}
remove_15_army_professionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_army_professionalism_var < 15
			}
		}
		set_variable = {
			var = SOV_army_professionalism_var
			value = 0
			tooltip = sov_remove_15_army_professionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_army_professionalism_var
			value = -15
			tooltip = sov_remove_15_army_professionalism
		}
	}
}

add_2_5_army_influence_effect = {
    # Case 1: Influence reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_army_influence_var > 97.4 }
        }
        # Set to maximum influence
		set_variable = {
			var = SOV_army_influence_var
			value = 100
			tooltip = sov_add_2_5_army_influence
		}
		set_variable = { SOV_the_red_army_conscription_factor = 0.1 }
		set_variable = { SOV_the_red_army_training_time_factor = -0.1 }
		custom_effect_tooltip = SOV_full_army_influence
    }
    # Case 2: Influence between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_influence_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_influence_var > 97.4 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_influence_too_high_flag }
        }
        # Increase Influence
		add_to_variable = {
			var = SOV_army_influence_var
			value = 2.5
			tooltip = sov_add_2_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = 0.005 }
		add_to_variable = { SOV_the_red_army_training_time_factor = -0.005 }
		custom_effect_tooltip = SOV_add_2_5_army_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_influence_too_high_flag
    }
    # Case 3: Influence below 75
    else = {
        # Increase Influence without additional bonuses
		add_to_variable = {
			var = SOV_army_influence_var
			value = 2.5
			tooltip = sov_add_2_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = 0.005 }
		add_to_variable = { SOV_the_red_army_training_time_factor = -0.005 }
		custom_effect_tooltip = SOV_add_2_5_army_influence_var
    }
}
remove_2_5_army_influence_effect = {
    # Case 1: Influence reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_army_influence_var < 2.6 }
        }
        # Set to maximum influence
		set_variable = {
			var = SOV_army_influence_var
			value = 0
			tooltip = sov_remove_2_5_army_influence
		}
		set_variable = { SOV_the_red_army_conscription_factor = -0.1 }
		set_variable = { SOV_the_red_army_training_time_factor = 0.1 }
		custom_effect_tooltip = SOV_no_army_influence
    }
    # Case 2: Influence between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_influence_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_influence_var < 2.6 }
            }
            has_country_flag = SOV_add_2_5_army_influence_too_high_flag
        }
        # Decrease Influence
		add_to_variable = {
			var = SOV_army_influence_var
			value = -2.5
			tooltip = sov_remove_2_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = -0.005 }
		add_to_variable = { SOV_the_red_army_training_time_factor = 0.005 }
		custom_effect_tooltip = SOV_remove_2_5_army_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_influence_too_high_flag
    }
    # Case 3: Influence over 75
    else = {
        # Decrease Influence without additional bonuses
		add_to_variable = {
			var = SOV_army_influence_var
			value = -2.5
			tooltip = sov_remove_2_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = -0.005 }
		add_to_variable = { SOV_the_red_army_training_time_factor = 0.005 }
		custom_effect_tooltip = SOV_remove_2_5_army_influence_var
    }
}
add_5_army_influence_effect = {
    # Case 1: Influence reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_army_influence_var > 94 }
        }
        # Set to maximum influence
		set_variable = {
			var = SOV_army_influence_var
			value = 100
			tooltip = sov_add_5_army_influence
		}
		set_variable = { SOV_the_red_army_conscription_factor = 0.1 }
		set_variable = { SOV_the_red_army_training_time_factor = -0.1 }
		custom_effect_tooltip = SOV_full_army_influence
    }
    # Case 2: Influence between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_influence_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_influence_var > 94 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_influence_too_high_flag }
        }
        # Increase Influence
		add_to_variable = {
			var = SOV_army_influence_var
			value = 5
			tooltip = sov_add_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_training_time_factor = -0.01 }
		custom_effect_tooltip = SOV_add_5_army_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_influence_too_high_flag
    }
    # Case 3: Influence below 75
    else = {
        # Increase Influence without additional bonuses
		add_to_variable = {
			var = SOV_army_influence_var
			value = 5
			tooltip = sov_add_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_training_time_factor = -0.01 }
		custom_effect_tooltip = SOV_add_5_army_influence_var
    }
}
remove_5_army_influence_effect = {
    # Case 1: Influence reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_army_influence_var < 6 }
        }
        # Set to maximum influence
		set_variable = {
			var = SOV_army_influence_var
			value = 0
			tooltip = sov_remove_5_army_influence
		}
		set_variable = { SOV_the_red_army_conscription_factor = -0.1 }
		set_variable = { SOV_the_red_army_training_time_factor = 0.1 }
		custom_effect_tooltip = SOV_no_army_influence
    }
    # Case 2: Influence between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_influence_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_influence_var < 6 }
            }
            has_country_flag = SOV_add_2_5_army_influence_too_high_flag
        }
        # Decrease Influence
		add_to_variable = {
			var = SOV_army_influence_var
			value = -5
			tooltip = sov_remove_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_training_time_factor = 0.01 }
		custom_effect_tooltip = SOV_remove_5_army_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_influence_too_high_flag
    }
    # Case 3: Influence over 75
    else = {
        # Decrease Influence without additional bonuses
		add_to_variable = {
			var = SOV_army_influence_var
			value = -5
			tooltip = sov_remove_5_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_training_time_factor = 0.01 }
		custom_effect_tooltip = SOV_remove_5_army_influence_var
    }
}
add_10_army_influence_effect = {
    # Case 1: Influence reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_army_influence_var > 89 }
        }
        # Set to maximum influence
		set_variable = {
			var = SOV_army_influence_var
			value = 100
			tooltip = sov_add_10_army_influence
		}
		set_variable = { SOV_the_red_army_conscription_factor = 0.1 }
		set_variable = { SOV_the_red_army_training_time_factor = -0.1 }
		custom_effect_tooltip = SOV_full_army_influence
    }
    # Case 2: Influence between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_influence_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_influence_var > 89 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_influence_too_high_flag }
        }
        # Increase Influence
		add_to_variable = {
			var = SOV_army_influence_var
			value = 10
			tooltip = sov_add_10_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_training_time_factor = -0.02 }
		custom_effect_tooltip = SOV_add_10_army_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_influence_too_high_flag
    }
    # Case 3: Influence below 75
    else = {
        # Increase Influence without additional bonuses
		add_to_variable = {
			var = SOV_army_influence_var
			value = 10
			tooltip = sov_add_10_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_training_time_factor = -0.02 }
		custom_effect_tooltip = SOV_add_10_army_influence_var
    }
}
remove_10_army_influence_effect = {
    # Case 1: Influence reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_army_influence_var < 11 }
        }
        # Set to maximum influence
		set_variable = {
			var = SOV_army_influence_var
			value = 0
			tooltip = sov_remove_10_army_influence
		}
		set_variable = { SOV_the_red_army_conscription_factor = -0.1 }
		set_variable = { SOV_the_red_army_training_time_factor = 0.1 }
		custom_effect_tooltip = SOV_no_army_influence
    }
    # Case 2: Influence between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_influence_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_influence_var < 11 }
            }
            has_country_flag = SOV_add_2_5_army_influence_too_high_flag
        }
        # Decrease Influence
		add_to_variable = {
			var = SOV_army_influence_var
			value = -10
			tooltip = sov_remove_10_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_training_time_factor = 0.02 }
		custom_effect_tooltip = SOV_remove_10_army_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_influence_too_high_flag
    }
    # Case 3: Influence over 75
    else = {
        # Decrease Influence without additional bonuses
		add_to_variable = {
			var = SOV_army_influence_var
			value = -10
			tooltip = sov_remove_10_army_influence
		}
		add_to_variable = { SOV_the_red_army_conscription_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_training_time_factor = 0.02 }
		custom_effect_tooltip = SOV_remove_10_army_influence_var
    }
}
add_15_army_influence_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_army_influence_var > 84
			}
		}
		set_variable = {
			var = SOV_army_influence_var
			value = 100
			tooltip = sov_add_15_army_influence
		}
	}
	else = {
		add_to_variable = {
			var = SOV_army_influence_var
			value = 15
			tooltip = sov_add_15_army_influence
		}
	}
}
remove_15_army_influence_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_army_influence_var < 15
			}
		}
		set_variable = {
			var = SOV_army_influence_var
			value = 0
			tooltip = sov_remove_15_army_influence
		}
	}
	else = {
		add_to_variable = {
			var = SOV_army_influence_var
			value = -15
			tooltip = sov_remove_15_army_influence
		}
	}
}

add_2_5_army_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_army_factionalism_var > 97.4 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_army_factionalism_var
			value = 100
			tooltip = sov_add_2_5_army_factionalism
		}
		set_variable = { SOV_the_red_army_army_org_factor = -0.2 }
		set_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.2 }
		set_variable = { SOV_the_red_army_max_dig_in_factor = -0.1 }
		custom_effect_tooltip = SOV_full_army_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_factionalism_var > 97.4 }
            }
            has_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 2.5
			tooltip = sov_add_2_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = -0.005 }
		custom_effect_tooltip = SOV_add_2_5_army_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 2.5
			tooltip = sov_add_2_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = -0.005 }
		custom_effect_tooltip = SOV_add_2_5_army_factionalism_var
    }
}
remove_2_5_army_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_army_factionalism_var < 2.6 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_army_factionalism_var
			value = 0
			tooltip = sov_remove_2_5_army_factionalism
		}
		set_variable = { SOV_the_red_army_army_org_factor = 0.2 }
		set_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.2 }
		set_variable = { SOV_the_red_army_max_dig_in_factor = 0.1 }
		custom_effect_tooltip = SOV_no_army_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_factionalism_var < 2.6 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = 0.005 }
		custom_effect_tooltip = SOV_remove_2_5_army_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = 0.01 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.01 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = 0.005 }
		custom_effect_tooltip = SOV_remove_2_5_army_factionalism_var
    }
}
add_5_army_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_army_factionalism_var > 94 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_army_factionalism_var
			value = 100
			tooltip = sov_add_5_army_factionalism
		}
		set_variable = { SOV_the_red_army_army_org_factor = -0.2 }
		set_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.2 }
		set_variable = { SOV_the_red_army_max_dig_in_factor = -0.1 }
		custom_effect_tooltip = SOV_full_army_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_factionalism_var > 94 }
            }
            has_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 5
			tooltip = sov_add_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = -0.01 }
		custom_effect_tooltip = SOV_add_5_army_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 5
			tooltip = sov_add_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = -0.01 }
		custom_effect_tooltip = SOV_add_5_army_factionalism_var
    }
}
remove_5_army_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_army_factionalism_var < 6 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_army_factionalism_var
			value = 0
			tooltip = sov_remove_5_army_factionalism
		}
		set_variable = { SOV_the_red_army_army_org_factor = 0.2 }
		set_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.2 }
		set_variable = { SOV_the_red_army_max_dig_in_factor = 0.1 }
		custom_effect_tooltip = SOV_no_army_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_factionalism_var < 6 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -5
			tooltip = sov_remove_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = 0.01 }
		custom_effect_tooltip = SOV_remove_5_army_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -5
			tooltip = sov_remove_5_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = 0.02 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.02 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = 0.01 }
		custom_effect_tooltip = SOV_remove_5_army_factionalism_var
    }
}
add_10_army_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_army_factionalism_var > 89 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_army_factionalism_var
			value = 100
			tooltip = sov_add_10_army_factionalism
		}
		set_variable = { SOV_the_red_army_army_org_factor = -0.2 }
		set_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.2 }
		set_variable = { SOV_the_red_army_max_dig_in_factor = -0.1 }
		custom_effect_tooltip = SOV_full_army_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_factionalism_var > 89 }
            }
            has_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 10
			tooltip = sov_add_10_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = -0.02 }
		custom_effect_tooltip = SOV_add_10_army_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 10
			tooltip = sov_add_10_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = -0.02 }
		custom_effect_tooltip = SOV_add_10_army_factionalism_var
    }
}
remove_10_army_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_army_factionalism_var < 11 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_army_factionalism_var
			value = 0
			tooltip = sov_remove_10_army_factionalism
		}
		set_variable = { SOV_the_red_army_army_org_factor = 0.2 }
		set_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.2 }
		set_variable = { SOV_the_red_army_max_dig_in_factor = 0.1 }
		custom_effect_tooltip = SOV_no_army_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_army_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_army_factionalism_var < 11 }
            }
            NOT = { has_country_flag = SOV_add_2_5_army_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -10
			tooltip = sov_remove_10_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = 0.02 }
		custom_effect_tooltip = SOV_remove_10_army_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_army_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_army_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -10
			tooltip = sov_remove_10_army_factionalism
		}
		add_to_variable = { SOV_the_red_army_army_org_factor = 0.04 }
		add_to_variable = { SOV_the_red_army_mobilization_laws_cost_factor = -0.04 }
		add_to_variable = { SOV_the_red_army_max_dig_in_factor = 0.02 }
		custom_effect_tooltip = SOV_remove_10_army_factionalism_var
    }
}
add_15_army_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_army_factionalism_var > 84
			}
		}
		set_variable = {
			var = SOV_army_factionalism_var
			value = 100
			tooltip = sov_add_15_army_factionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = 15
			tooltip = sov_add_15_army_factionalism
		}
	}
}
remove_15_army_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_army_factionalism_var < 15
			}
		}
		set_variable = {
			var = SOV_army_factionalism_var
			value = 0
			tooltip = sov_remove_15_army_factionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_army_factionalism_var
			value = -15
			tooltip = sov_remove_15_army_factionalism
		}
	}
}

#
# Navy
#
add_2_5_navy_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_navy_professionalism_var > 97.4 }
        }
        # Set to maximum professionalism
        custom_effect_tooltip = SOV_full_navy_professionalism
        set_variable = { 
            var = SOV_navy_professionalism_var 
            value = 100 
            tooltip = sov_add_2_5_navy_professionalism 
        }
        
        # Apply maximum level bonuses
        set_variable = { SOV_red_fleet_navy_visibility = -0.2 }
        set_variable = { SOV_red_fleet_screening_efficiency = 0.2 }
        set_variable = { SOV_red_fleet_positioning = 0.1 }
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_professionalism_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_professionalism_var > 97.4 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag }
        }
        # Increase professionalism
        add_to_variable = { 
            var = SOV_navy_professionalism_var 
            value = 2.5 
            tooltip = sov_add_2_5_navy_professionalism 
        }
        
        # Apply incremental bonuses
        add_to_variable = { SOV_red_fleet_navy_visibility = -0.01 }
        add_to_variable = { SOV_red_fleet_screening_efficiency = 0.01 }
        add_to_variable = { SOV_red_fleet_positioning = 0.005 }
        
        # Show tooltip and apply political power penalty
        custom_effect_tooltip = SOV_add_2_5_navy_professionalism_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase professionalism without additional bonuses
        add_to_variable = { 
            var = SOV_navy_professionalism_var 
            value = 2.5 
            tooltip = sov_add_2_5_navy_professionalism 
        }
		
        # Apply incremental bonuses
        add_to_variable = { SOV_red_fleet_navy_visibility = -0.01 }
        add_to_variable = { SOV_red_fleet_screening_efficiency = 0.01 }
        add_to_variable = { SOV_red_fleet_positioning = 0.005 }
        
        # Show tooltip for basic professionalism increase
        custom_effect_tooltip = SOV_add_2_5_navy_professionalism_var
    }
}
remove_2_5_navy_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_navy_professionalism_var < 2.6 }
        }
        # Set to maximum professionalism
        custom_effect_tooltip = SOV_no_navy_professionalism
        set_variable = { 
            var = SOV_navy_professionalism_var 
            value = 0 
            tooltip = sov_remove_2_5_navy_professionalism 
        }
        
        # Apply maximum level bonuses
		set_variable = { SOV_red_fleet_navy_visibility = 0.2 }
		set_variable = { SOV_red_fleet_screening_efficiency = -0.2 }
		set_variable = { SOV_red_fleet_positioning = -0.1 }
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_professionalism_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_professionalism_var < 2.6 }
            }
            has_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
        }
        # Decrease professionalism
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_navy_professionalism
		}
        
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = 0.01 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = -0.01 }
		add_to_variable = { SOV_red_fleet_positioning = -0.005 }
        
        # Show tooltip and apply remove political power penalty
        custom_effect_tooltip = SOV_remove_2_5_navy_professionalism_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease professionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_navy_professionalism
		}
		
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = 0.01 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = -0.01 }
		add_to_variable = { SOV_red_fleet_positioning = -0.005 }
        
        # Show tooltip for basic professionalism decrease
        custom_effect_tooltip = SOV_remove_2_5_navy_professionalism_var
    }
}
add_5_navy_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_navy_professionalism_var > 94 }
        }
        # Set to maximum professionalism
        custom_effect_tooltip = SOV_full_navy_professionalism
        set_variable = { 
            var = SOV_navy_professionalism_var 
            value = 100 
            tooltip = sov_add_5_navy_professionalism 
        }
        
        # Apply maximum level bonuses
        set_variable = { SOV_red_fleet_navy_visibility = -0.2 }
		set_variable = { SOV_red_fleet_screening_efficiency = 0.2 }
		set_variable = { SOV_red_fleet_positioning = 0.1 }
    }
    # Case 2: Professionalism between 75 and 95
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_professionalism_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_professionalism_var > 94 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag }
        }
        # Increase professionalism
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = 5
			tooltip = sov_add_5_navy_professionalism
		}
        
        # Apply incremental bonuses
        add_to_variable = { SOV_red_fleet_navy_visibility = -0.02 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = 0.02 }
		add_to_variable = { SOV_red_fleet_positioning = 0.01 }
        
        # Show tooltip and apply political power penalty
        custom_effect_tooltip = SOV_add_5_navy_professionalism_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase professionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = 5
			tooltip = sov_add_5_navy_professionalism
		}
		
        # Apply incremental bonuses
        add_to_variable = { SOV_red_fleet_navy_visibility = -0.02 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = 0.02 }
		add_to_variable = { SOV_red_fleet_positioning = 0.01 }
        
        # Show tooltip for basic professionalism increase
        custom_effect_tooltip = SOV_add_5_navy_professionalism_var
    }
}
remove_5_navy_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_navy_professionalism_var < 6 }
        }
        # Set to maximum professionalism
        custom_effect_tooltip = SOV_no_navy_professionalism
        set_variable = { 
            var = SOV_navy_professionalism_var 
            value = 0 
            tooltip = sov_remove_5_navy_professionalism 
        }
        
        # Apply maximum level bonuses
		set_variable = { SOV_red_fleet_navy_visibility = 0.2 }
		set_variable = { SOV_red_fleet_screening_efficiency = -0.2 }
		set_variable = { SOV_red_fleet_positioning = -0.1 }
    }
    # Case 2: Professionalism between 5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_professionalism_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_professionalism_var < 6 }
            }
            has_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
        }
        # Decrease professionalism
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -5
			tooltip = sov_remove_5_navy_professionalism
		}
        
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = 0.02 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = -0.02 }
		add_to_variable = { SOV_red_fleet_positioning = -0.01 }
        
        # Show tooltip and apply remove political power penalty
        custom_effect_tooltip = SOV_remove_5_navy_professionalism_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease professionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -5
			tooltip = sov_remove_5_navy_professionalism
		}
		
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = 0.02 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = -0.02 }
		add_to_variable = { SOV_red_fleet_positioning = -0.01 }
        
        # Show tooltip for basic professionalism decrease
        custom_effect_tooltip = SOV_remove_5_navy_professionalism_var
    }
}
add_10_navy_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_navy_professionalism_var > 89 }
        }
        # Set to maximum professionalism
        custom_effect_tooltip = SOV_full_navy_professionalism
        set_variable = { 
            var = SOV_navy_professionalism_var 
            value = 100 
            tooltip = sov_add_10_navy_professionalism 
        }
        
        # Apply maximum level bonuses
        set_variable = { SOV_red_fleet_navy_visibility = -0.2 }
		set_variable = { SOV_red_fleet_screening_efficiency = 0.2 }
		set_variable = { SOV_red_fleet_positioning = 0.1 }
    }
    # Case 2: Professionalism between 75 and 95
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_professionalism_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_professionalism_var > 89 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag }
        }
        # Increase professionalism
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = 10
			tooltip = sov_add_10_navy_professionalism
		}
        
        # Apply incremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = -0.04 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = 0.04 }
		add_to_variable = { SOV_red_fleet_positioning = 0.02 }
        
        # Show tooltip and apply political power penalty
        custom_effect_tooltip = SOV_add_10_navy_professionalism_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase professionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = 10
			tooltip = sov_add_10_navy_professionalism
		}
		
        # Apply incremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = -0.04 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = 0.04 }
		add_to_variable = { SOV_red_fleet_positioning = 0.02 }
        
        # Show tooltip for basic professionalism increase
        custom_effect_tooltip = SOV_add_10_navy_professionalism_var
    }
}
remove_10_navy_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_navy_professionalism_var < 11 }
        }
        # Set to maximum professionalism
        custom_effect_tooltip = SOV_no_navy_professionalism
        set_variable = { 
            var = SOV_navy_professionalism_var 
            value = 0 
            tooltip = sov_remove_10_navy_professionalism 
        }
        
        # Apply maximum level bonuses
		set_variable = { SOV_red_fleet_navy_visibility = 0.2 }
		set_variable = { SOV_red_fleet_screening_efficiency = -0.2 }
		set_variable = { SOV_red_fleet_positioning = -0.1 }
    }
    # Case 2: Professionalism between 5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_professionalism_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_professionalism_var < 11 }
            }
            has_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
        }
        # Decrease professionalism
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -10
			tooltip = sov_remove_10_navy_professionalism
		}
        
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = 0.04 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = -0.04 }
		add_to_variable = { SOV_red_fleet_positioning = -0.02 }
        
        # Show tooltip and apply remove political power penalty
        custom_effect_tooltip = SOV_remove_10_navy_professionalism_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease professionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -10
			tooltip = sov_remove_10_navy_professionalism
		}
		
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_visibility = 0.04 }
		add_to_variable = { SOV_red_fleet_screening_efficiency = -0.04 }
		add_to_variable = { SOV_red_fleet_positioning = -0.02 }
        
        # Show tooltip for basic professionalism decrease
        custom_effect_tooltip = SOV_remove_10_navy_professionalism_var
    }
}
add_15_navy_professionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_navy_professionalism_var > 84
			}
		}
		set_variable = {
			var = SOV_navy_professionalism_var
			value = 100
			tooltip = sov_add_15_navy_professionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = 15
			tooltip = sov_add_15_navy_professionalism
		}
	}
}
remove_15_navy_professionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_navy_professionalism_var < 15
			}
		}
		set_variable = {
			var = SOV_navy_professionalism_var
			value = 0
			tooltip = sov_remove_15_navy_professionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_navy_professionalism_var
			value = -15
			tooltip = sov_remove_15_navy_professionalism
		}
	}
}
add_2_5_navy_influence_effect = {
    # Case 1: Technological Innovation reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_navy_technological_innovation_var > 97.4 }
        }
        # Set to maximum Technological Innovation
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 100
			tooltip = sov_add_2_5_navy_influence
		}
        
        # Apply maximum level bonuses
		set_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.1 }
		set_variable = { SOV_red_fleet_repair_speed_factor = 0.2 }
		custom_effect_tooltip = SOV_full_navy_influence
    }
    # Case 2: Technological Innovation between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_technological_innovation_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_technological_innovation_var > 97.4 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_influence_too_high_flag }
        }
        # Increase Technological Innovation
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 2.5
			tooltip = sov_add_2_5_navy_influence
		}
        
        # Apply incremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.005 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = 0.01 }
        
        # Show tooltip and apply political power penalty
        custom_effect_tooltip = SOV_add_2_5_navy_influence_var
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_influence_too_high_flag
    }
    # Case 3: Technological Innovation below 75
    else = {
        # Increase Technological Innovation without additional bonuses
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 2.5
			tooltip = sov_add_2_5_navy_influence
		}
		
        # Apply incremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.005 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = 0.01 }
        
        # Show tooltip for basic Technological Innovation increase
        custom_effect_tooltip = SOV_add_2_5_navy_influence_var
    }
}
remove_2_5_navy_influence_effect = {
    # Case 1: Increase Technological reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_navy_technological_innovation_var < 2.6 }
        }
        # Set to maximum Increase Technological
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 0
			tooltip = sov_remove_2_5_navy_influence
		}
		set_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.1 }
		set_variable = { SOV_red_fleet_repair_speed_factor = -0.2 }
		custom_effect_tooltip = SOV_no_navy_influence
    }
    # Case 2: Increase Technological between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_technological_innovation_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_technological_innovation_var < 2.6 }
            }
            has_country_flag = SOV_add_2_5_navy_influence_too_high_flag
        }
        # Decrease Increase Technological
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -2.5
			tooltip = sov_remove_2_5_navy_influence
		}
        
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.005 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = -0.01 }
		custom_effect_tooltip = SOV_remove_2_5_navy_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_influence_too_high_flag
    }
    # Case 3: Increase Technological over 75
    else = {
        # Decrease Increase Technological without additional bonuses
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -2.5
			tooltip = sov_remove_2_5_navy_influence
		}
		
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.005 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = -0.01 }
		custom_effect_tooltip = SOV_remove_2_5_navy_influence_var
    }
}
add_5_navy_influence_effect = {
    # Case 1: Technological Innovation reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_navy_technological_innovation_var > 94 }
        }
        # Set to maximum Technological Innovation
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 100
			tooltip = sov_add_5_navy_influence
		}
        
        # Apply maximum level bonuses
		set_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.1 }
		set_variable = { SOV_red_fleet_repair_speed_factor = 0.2 }
		custom_effect_tooltip = SOV_full_navy_influence
    }
    # Case 2: Technological Innovation between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_technological_innovation_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_technological_innovation_var > 94 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_influence_too_high_flag }
        }
        # Increase Technological Innovation
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 5
			tooltip = sov_add_5_navy_influence
		}
        
        # Apply incremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.01 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = 0.02 }
		custom_effect_tooltip = SOV_add_5_navy_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_influence_too_high_flag
    }
    # Case 3: Technological Innovation below 75
    else = {
        # Increase Technological Innovation without additional bonuses
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 5
			tooltip = sov_add_5_navy_influence
		}
		
        # Apply incremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.01 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = 0.02 }
		custom_effect_tooltip = SOV_add_5_navy_influence_var
    }
}
remove_5_navy_influence_effect = {
    # Case 1: Increase Technological reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_navy_technological_innovation_var < 6 }
        }
        # Set to maximum Increase Technological
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 0
			tooltip = sov_remove_5_navy_influence
		}
		set_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.1 }
		set_variable = { SOV_red_fleet_repair_speed_factor = -0.2 }
		custom_effect_tooltip = SOV_no_navy_influence
    }
    # Case 2: Increase Technological between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_technological_innovation_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_technological_innovation_var < 6 }
            }
            has_country_flag = SOV_add_2_5_navy_influence_too_high_flag
        }
        # Decrease Increase Technological
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -5
			tooltip = sov_remove_5_navy_influence
		}
        
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.01 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = -0.02 }
		custom_effect_tooltip = SOV_remove_5_navy_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_influence_too_high_flag
    }
    # Case 3: Increase Technological over 75
    else = {
        # Decrease Increase Technological without additional bonuses
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -5
			tooltip = sov_remove_5_navy_influence
		}
		
        # Apply decremental bonuses
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.01 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = -0.02 }
		custom_effect_tooltip = SOV_remove_5_navy_influence_var
    }
}
add_10_navy_influence_effect = {
    # Case 1: Technological Innovation reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_navy_technological_innovation_var > 89 }
        }
        # Set to maximum Technological Innovation
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 100
			tooltip = sov_add_10_navy_influence
		}
		set_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.1 }
		set_variable = { SOV_red_fleet_repair_speed_factor = 0.2 }
		custom_effect_tooltip = SOV_full_navy_influence
    }
    # Case 2: Technological Innovation between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_technological_innovation_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_technological_innovation_var > 89 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_influence_too_high_flag }
        }
        # Increase Technological Innovation
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 10
			tooltip = sov_add_10_navy_influence
		}
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.02 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = 0.04 }
		custom_effect_tooltip = SOV_add_10_navy_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_influence_too_high_flag
    }
    # Case 3: Technological Innovation below 75
    else = {
        # Increase Technological Innovation without additional bonuses
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 10
			tooltip = sov_add_10_navy_influence
		}
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = -0.02 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = 0.04 }
		custom_effect_tooltip = SOV_add_10_navy_influence_var
    }
}
remove_10_navy_influence_effect = {
    # Case 1: Increase Technological reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_navy_technological_innovation_var < 11 }
        }
        # Set to maximum Increase Technological
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 0
			tooltip = sov_remove_10_navy_influence
		}
		set_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.1 }
		set_variable = { SOV_red_fleet_repair_speed_factor = -0.2 }
		custom_effect_tooltip = SOV_no_navy_influence
    }
    # Case 2: Increase Technological between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_technological_innovation_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_technological_innovation_var < 11 }
            }
            has_country_flag = SOV_add_2_5_navy_influence_too_high_flag
        }
        # Decrease Increase Technological
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -10
			tooltip = sov_remove_10_navy_influence
		}
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.02 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = -0.04 }
		custom_effect_tooltip = SOV_remove_10_navy_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_influence_too_high_flag
    }
    # Case 3: Increase Technological over 75
    else = {
        # Decrease Increase Technological without additional bonuses
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -10
			tooltip = sov_remove_10_navy_influence
		}
		add_to_variable = { SOV_red_fleet_navy_refit_ic_cost = 0.02 }
		add_to_variable = { SOV_red_fleet_repair_speed_factor = -0.04 }
		custom_effect_tooltip = SOV_remove_10_navy_influence_var
    }
}
add_15_navy_influence_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_navy_technological_innovation_var > 84
			}
		}
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 100
			tooltip = sov_add_15_navy_influence
		}
	}
	else = {
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = 15
			tooltip = sov_add_15_navy_influence
		}
	}
}
remove_15_navy_influence_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_navy_technological_innovation_var < 15
			}
		}
		set_variable = {
			var = SOV_navy_technological_innovation_var
			value = 0
			tooltip = sov_remove_15_navy_influence
		}
	}
	else = {
		add_to_variable = {
			var = SOV_navy_technological_innovation_var
			value = -15
			tooltip = sov_remove_15_navy_influence
		}
	}
}
add_2_5_navy_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_navy_factionalism_var > 97.4 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 100
			tooltip = sov_add_2_5_navy_factionalism
		}
		set_variable = { SOV_red_fleet_naval_coordination = -0.2 }
		custom_effect_tooltip = SOV_full_navy_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_factionalism_var > 97.4 }
            }
            has_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 2.5
			tooltip = sov_add_2_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = -0.01 }
		custom_effect_tooltip = SOV_add_2_5_navy_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 2.5
			tooltip = sov_add_2_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = -0.01 }
		custom_effect_tooltip = SOV_add_2_5_navy_factionalism_var
    }
}
remove_2_5_navy_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_navy_factionalism_var < 2.6 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 0
			tooltip = sov_remove_2_5_navy_factionalism
		}
		set_variable = { SOV_red_fleet_naval_coordination = 0.2 }
		custom_effect_tooltip = SOV_no_navy_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_factionalism_var < 2.6 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = 0.01 }
		custom_effect_tooltip = SOV_remove_2_5_navy_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = 0.01 }
		custom_effect_tooltip = SOV_remove_2_5_navy_factionalism_var
    }
}
add_5_navy_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_navy_factionalism_var > 94 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 100
			tooltip = sov_add_5_navy_factionalism
		}
		set_variable = { SOV_red_fleet_naval_coordination = -0.2 }
		custom_effect_tooltip = SOV_full_navy_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_factionalism_var > 94 }
            }
            has_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 5
			tooltip = sov_add_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = -0.02 }
		custom_effect_tooltip = SOV_add_5_navy_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 5
			tooltip = sov_add_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = -0.02 }
		custom_effect_tooltip = SOV_add_5_navy_factionalism_var
    }
}
remove_5_navy_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_navy_factionalism_var < 6 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 0
			tooltip = sov_remove_5_navy_factionalism
		}
		set_variable = { SOV_red_fleet_naval_coordination = 0.2 }
		custom_effect_tooltip = SOV_no_navy_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_factionalism_var < 6 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -5
			tooltip = sov_remove_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = 0.02 }
		custom_effect_tooltip = SOV_remove_5_navy_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -5
			tooltip = sov_remove_5_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = 0.02 }
		custom_effect_tooltip = SOV_remove_5_navy_factionalism_var
    }
}
add_10_navy_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_navy_factionalism_var > 89 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 100
			tooltip = sov_add_10_navy_factionalism
		}
		set_variable = { SOV_red_fleet_naval_coordination = -0.2 }
		custom_effect_tooltip = SOV_full_navy_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_factionalism_var > 89 }
            }
            has_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 10
			tooltip = sov_add_10_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = -0.04 }
		custom_effect_tooltip = SOV_add_10_navy_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 10
			tooltip = sov_add_10_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = -0.04 }
		custom_effect_tooltip = SOV_add_10_navy_factionalism_var
    }
}
remove_10_navy_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_navy_factionalism_var < 11 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 0
			tooltip = sov_remove_10_navy_factionalism
		}
		set_variable = { SOV_red_fleet_naval_coordination = 0.2 }
		custom_effect_tooltip = SOV_no_navy_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_navy_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_navy_factionalism_var < 11 }
            }
            NOT = { has_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -10
			tooltip = sov_remove_10_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = 0.04 }
		custom_effect_tooltip = SOV_remove_10_navy_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_fleet_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_navy_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -10
			tooltip = sov_remove_10_navy_factionalism
		}
		add_to_variable = { SOV_red_fleet_naval_coordination = 0.04 }
		custom_effect_tooltip = SOV_remove_10_navy_factionalism_var
    }
}
add_15_navy_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_navy_factionalism_var > 84
			}
		}
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 100
			tooltip = sov_add_15_navy_factionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = 15
			tooltip = sov_add_15_navy_factionalism
		}
	}
}
remove_15_navy_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_navy_factionalism_var < 15
			}
		}
		set_variable = {
			var = SOV_navy_factionalism_var
			value = 0
			tooltip = sov_remove_15_navy_factionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_navy_factionalism_var
			value = -15
			tooltip = sov_remove_15_navy_factionalism
		}
	}
}

#
# Air Force
#
add_2_5_airforce_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_airforce_pilot_training_var > 97.4 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 100
			tooltip = sov_add_2_5_airforce_professionalism
		}
		set_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.4 }
		set_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.4 }
		custom_effect_tooltip = SOV_full_airforce_professionalism
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_pilot_training_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_pilot_training_var > 97.4 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag }
        }
        # Increase professionalism
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 2.5
			tooltip = sov_add_2_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.02 }
		custom_effect_tooltip = SOV_add_2_5_airforce_professionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase professionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 2.5
			tooltip = sov_add_2_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.02 }
		custom_effect_tooltip = SOV_add_2_5_airforce_professionalism_var
    }
}
remove_2_5_airforce_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_airforce_pilot_training_var < 2.6 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 0
			tooltip = sov_remove_2_5_airforce_professionalism
		}
		set_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.4 }
		set_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.4 }
		custom_effect_tooltip = SOV_no_airforce_professionalism
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_pilot_training_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_pilot_training_var < 2.6 }
            }
            has_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
        }
        # Decrease professionalism
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -2.5
			tooltip = sov_remove_2_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.02 }
		custom_effect_tooltip = SOV_remove_2_5_airforce_professionalism_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease professionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -2.5
			tooltip = sov_remove_2_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.02 }
		custom_effect_tooltip = SOV_remove_2_5_airforce_professionalism_var
    }
}
add_5_airforce_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_airforce_pilot_training_var > 94 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 100
			tooltip = sov_add_5_airforce_professionalism
		}
		set_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.4 }
		set_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.4 }
		custom_effect_tooltip = SOV_full_airforce_professionalism
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_pilot_training_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_pilot_training_var > 94 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag }
        }
        # Increase professionalism
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 5
			tooltip = sov_add_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.04 }
		custom_effect_tooltip = SOV_add_5_airforce_professionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase professionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 5
			tooltip = sov_add_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.04 }
		custom_effect_tooltip = SOV_add_5_airforce_professionalism_var
    }
}
remove_5_airforce_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_airforce_pilot_training_var < 6 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 0
			tooltip = sov_remove_5_airforce_professionalism
		}
		set_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.4 }
		set_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.4 }
		custom_effect_tooltip = SOV_no_airforce_professionalism
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_pilot_training_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_pilot_training_var < 6 }
            }
            has_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
        }
        # Decrease professionalism
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -5
			tooltip = sov_remove_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.04 }
		custom_effect_tooltip = SOV_remove_5_airforce_professionalism_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease professionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -5
			tooltip = sov_remove_5_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.04 }
		custom_effect_tooltip = SOV_remove_5_airforce_professionalism_var
    }
}
add_10_airforce_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_airforce_pilot_training_var > 89 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 100
			tooltip = sov_add_10_airforce_professionalism
		}
		set_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.4 }
		set_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.4 }
		custom_effect_tooltip = SOV_full_airforce_professionalism
    }
    # Case 2: Professionalism between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_pilot_training_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_pilot_training_var > 89 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag }
        }
        # Increase professionalism
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 10
			tooltip = sov_add_10_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.08 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.08 }
		custom_effect_tooltip = SOV_add_10_airforce_professionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
    }
    # Case 3: Professionalism below 75
    else = {
        # Increase professionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 10
			tooltip = sov_add_10_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = -0.08 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = 0.08 }
		custom_effect_tooltip = SOV_add_10_airforce_professionalism_var
    }
}
remove_10_airforce_professionalism_effect = {
    # Case 1: Professionalism reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_airforce_pilot_training_var < 11 }
        }
        # Set to maximum professionalism
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 0
			tooltip = sov_remove_10_airforce_professionalism
		}
		set_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.4 }
		set_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.4 }
		custom_effect_tooltip = SOV_no_airforce_professionalism
    }
    # Case 2: Professionalism between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_pilot_training_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_pilot_training_var < 11 }
            }
            has_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
        }
        # Decrease professionalism
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -10
			tooltip = sov_remove_10_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.08 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.08 }
		custom_effect_tooltip = SOV_remove_10_airforce_professionalism_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_professionalism_too_high_flag
    }
    # Case 3: Professionalism over 75
    else = {
        # Decrease professionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -10
			tooltip = sov_remove_10_airforce_professionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_wing_xp_loss_when_killed_factor = 0.08 }
		add_to_variable = { SOV_soviet_airforce_air_ace_generation_chance_factor = -0.08 }
		custom_effect_tooltip = SOV_remove_10_airforce_professionalism_var
    }
}
add_15_airforce_professionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_pilot_training_var > 84
			}
		}
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 100
			tooltip = sov_add_15_airforce_professionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = 15
			tooltip = sov_add_15_airforce_professionalism
		}
	}
}
remove_15_airforce_professionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_pilot_training_var < 15
			}
		}
		set_variable = {
			var = SOV_airforce_pilot_training_var
			value = 0
			tooltip = sov_remove_15_airforce_professionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_pilot_training_var
			value = -15
			tooltip = sov_remove_15_airforce_professionalism
		}
	}
}
add_2_5_airforce_influence_effect = {
    # Case 1: Technological Innovation reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_airforce_technological_innovation_var > 97.4 }
        }
        # Set to maximum Technological Innovation
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 100
			tooltip = sov_add_2_5_airforce_influence
		}
		set_variable = { SOV_soviet_airforce_air_accidents_factor = -0.4 }
		set_variable = { SOV_soviet_airforce_air_night_penalty = -0.2 }
		set_variable = { SOV_soviet_airforce_air_weather_penalty = -0.2 }
		custom_effect_tooltip = SOV_full_airforce_influence
    }
    # Case 2: Technological Innovation between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_technological_innovation_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_technological_innovation_var > 97.4 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag }
        }
        # Increase Technological Innovation
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 2.5
			tooltip = sov_add_2_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = -0.01 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = -0.01 }
		custom_effect_tooltip = SOV_add_2_5_airforce_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
    }
    # Case 3: Technological Innovation below 75
    else = {
        # Increase Technological Innovation without additional bonuses
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 2.5
			tooltip = sov_add_2_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = -0.01 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = -0.01 }
		custom_effect_tooltip = SOV_add_2_5_airforce_influence_var
    }
}
remove_2_5_airforce_influence_effect = {
    # Case 1: Increase Technological reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_airforce_technological_innovation_var < 2.6 }
        }
        # Set to maximum Increase Technological
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 0
			tooltip = sov_remove_2_5_airforce_influence
		}
		set_variable = { SOV_soviet_airforce_air_accidents_factor = 0.4 }
		set_variable = { SOV_soviet_airforce_air_night_penalty = 0.2 }
		set_variable = { SOV_soviet_airforce_air_weather_penalty = 0.2 }
		custom_effect_tooltip = SOV_no_airforce_influence
    }
    # Case 2: Increase Technological between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_technological_innovation_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_technological_innovation_var < 2.6 }
            }
            has_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
        }
        # Decrease Increase Technological
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -2.5
			tooltip = sov_remove_2_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = 0.01 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = 0.01 }
		custom_effect_tooltip = SOV_remove_2_5_airforce_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
    }
    # Case 3: Increase Technological over 75
    else = {
        # Decrease Increase Technological without additional bonuses
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -2.5
			tooltip = sov_remove_2_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = 0.01 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = 0.01 }
		custom_effect_tooltip = SOV_remove_2_5_airforce_influence_var
    }
}
add_5_airforce_influence_effect = {
    # Case 1: Technological Innovation reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_airforce_technological_innovation_var > 94 }
        }
        # Set to maximum Technological Innovation
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 100
			tooltip = sov_add_5_airforce_influence
		}
		set_variable = { SOV_soviet_airforce_air_accidents_factor = -0.4 }
		set_variable = { SOV_soviet_airforce_air_night_penalty = -0.2 }
		set_variable = { SOV_soviet_airforce_air_weather_penalty = -0.2 }
		custom_effect_tooltip = SOV_full_airforce_influence
    }
    # Case 2: Technological Innovation between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_technological_innovation_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_technological_innovation_var > 94 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag }
        }
        # Increase Technological Innovation
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 5
			tooltip = sov_add_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = -0.02 }
		custom_effect_tooltip = SOV_add_5_airforce_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
    }
    # Case 3: Technological Innovation below 75
    else = {
        # Increase Technological Innovation without additional bonuses
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 5
			tooltip = sov_add_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = -0.02 }
		custom_effect_tooltip = SOV_add_5_airforce_influence_var
    }
}
remove_5_airforce_influence_effect = {
    # Case 1: Increase Technological reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_airforce_technological_innovation_var < 6 }
        }
        # Set to maximum Increase Technological
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 0
			tooltip = sov_remove_5_airforce_influence
		}
		set_variable = { SOV_soviet_airforce_air_accidents_factor = 0.4 }
		set_variable = { SOV_soviet_airforce_air_night_penalty = 0.2 }
		set_variable = { SOV_soviet_airforce_air_weather_penalty = 0.2 }
		custom_effect_tooltip = SOV_no_airforce_influence
    }
    # Case 2: Increase Technological between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_technological_innovation_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_technological_innovation_var < 6 }
            }
            has_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
        }
        # Decrease Increase Technological
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -5
			tooltip = sov_remove_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = 0.02 }
		custom_effect_tooltip = SOV_remove_5_airforce_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
    }
    # Case 3: Increase Technological over 75
    else = {
        # Decrease Increase Technological without additional bonuses
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -5
			tooltip = sov_remove_5_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = 0.02 }
		custom_effect_tooltip = SOV_remove_5_airforce_influence_var
    }
}
add_10_airforce_influence_effect = {
    # Case 1: Technological Innovation reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_airforce_technological_innovation_var > 89 }
        }
        # Set to maximum Technological Innovation
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 100
			tooltip = sov_add_10_airforce_influence
		}
		set_variable = { SOV_soviet_airforce_air_accidents_factor = -0.4 }
		set_variable = { SOV_soviet_airforce_air_night_penalty = -0.2 }
		set_variable = { SOV_soviet_airforce_air_weather_penalty = -0.2 }
		custom_effect_tooltip = SOV_full_airforce_influence
    }
    # Case 2: Technological Innovation between 75 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_technological_innovation_var 
                value = 75 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_technological_innovation_var > 89 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag }
        }
        # Increase Technological Innovation
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 10
			tooltip = sov_add_10_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = -0.08 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = -0.04 }
		custom_effect_tooltip = SOV_add_10_airforce_influence_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
    }
    # Case 3: Technological Innovation below 75
    else = {
        # Increase Technological Innovation without additional bonuses
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 10
			tooltip = sov_add_10_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = -0.08 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = -0.04 }
		custom_effect_tooltip = SOV_add_10_airforce_influence_var
    }
}
remove_10_airforce_influence_effect = {
    # Case 1: Increase Technological reaches maximum cap (10-)
    if = {
        limit = {
            check_variable = { SOV_airforce_technological_innovation_var < 11 }
        }
        # Set to maximum Increase Technological
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 0
			tooltip = sov_remove_10_airforce_influence
		}
		set_variable = { SOV_soviet_airforce_air_accidents_factor = 0.4 }
		set_variable = { SOV_soviet_airforce_air_night_penalty = 0.2 }
		set_variable = { SOV_soviet_airforce_air_weather_penalty = 0.2 }
		custom_effect_tooltip = SOV_no_airforce_influence
    }
    # Case 2: Increase Technological between 2.5 and 75
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_technological_innovation_var 
                value = 75 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_technological_innovation_var < 11 }
            }
            has_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
        }
        # Decrease Increase Technological
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -10
			tooltip = sov_remove_10_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = 0.08 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = 0.04 }
		custom_effect_tooltip = SOV_remove_10_airforce_influence_var
        
        # Show tooltip and apply remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_technological_innovation_too_high_flag
    }
    # Case 3: Increase Technological over 75
    else = {
        # Decrease Increase Technological without additional bonuses
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -10
			tooltip = sov_remove_10_airforce_influence
		}
		add_to_variable = { SOV_soviet_airforce_air_accidents_factor = 0.08 }
		add_to_variable = { SOV_soviet_airforce_air_night_penalty = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_weather_penalty = 0.04 }
		custom_effect_tooltip = SOV_remove_10_airforce_influence_var
    }
}
add_15_airforce_influence_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_technological_innovation_var > 84
			}
		}
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 100
			tooltip = sov_add_15_airforce_influence
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 15
			tooltip = sov_add_15_airforce_influence
		}
	}
}
remove_15_airforce_influence_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_technological_innovation_var < 15
			}
		}
		set_variable = {
			var = SOV_airforce_technological_innovation_var
			value = 0
			tooltip = sov_remove_15_airforce_influence
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_technological_innovation_var
			value = -15
			tooltip = sov_remove_15_airforce_influence
		}
	}
}
add_2_5_airforce_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (97.5+)
    if = {
        limit = {
            check_variable = { SOV_airforce_factionalism_var > 97.4 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 100
			tooltip = sov_add_2_5_airforce_factionalism
		}
		set_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.2 }
		set_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.4 }
		custom_effect_tooltip = SOV_full_airforce_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_factionalism_var > 97.4 }
            }
            has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 2.5
			tooltip = sov_add_2_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.01 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.02 }
		custom_effect_tooltip = SOV_add_2_5_airforce_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 2.5
			tooltip = sov_add_2_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.01 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.02 }
		custom_effect_tooltip = SOV_add_2_5_airforce_factionalism_var
    }
}
remove_2_5_airforce_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (2.5-)
    if = {
        limit = {
            check_variable = { SOV_airforce_factionalism_var < 2.6 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 0
			tooltip = sov_remove_2_5_airforce_factionalism
		}
		set_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = 0.2 }
		set_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = 0.4 }
		custom_effect_tooltip = SOV_no_airforce_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_factionalism_var < 2.6 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = 0.01 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = 0.02 }
		custom_effect_tooltip = SOV_remove_2_5_airforce_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = -2.5
			tooltip = sov_remove_2_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = 0.01 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = 0.02 }
		custom_effect_tooltip = SOV_remove_2_5_airforce_factionalism_var
    }
}
add_5_airforce_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (95+)
    if = {
        limit = {
            check_variable = { SOV_airforce_factionalism_var > 94 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 100
			tooltip = sov_add_5_airforce_factionalism
		}
		set_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.2 }
		set_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.4 }
		custom_effect_tooltip = SOV_full_airforce_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_factionalism_var > 94 }
            }
            has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 5
			tooltip = sov_add_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.04 }
		custom_effect_tooltip = SOV_add_5_airforce_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 5
			tooltip = sov_add_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.02 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.04 }
		custom_effect_tooltip = SOV_add_5_airforce_factionalism_var
    }
}
remove_5_airforce_factionalism_effect = {
    # Case 1: Increase Factionalism reaches maximum cap (5-)
    if = {
        limit = {
            check_variable = { SOV_airforce_factionalism_var < 6 }
        }
        # Set to maximum Increase Factionalism
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 0
			tooltip = sov_remove_5_airforce_factionalism
		}
		set_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.2 }
		set_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.4 }
		custom_effect_tooltip = SOV_full_airforce_factionalism
    }
    # Case 2: Increase Factionalism between 2.5 and 25
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_factionalism_var 
                value = 25 
                compare = less_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_factionalism_var < 6 }
            }
            NOT = { has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag }
        }
        # Decrease Increase Factionalism
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = -5
			tooltip = sov_remove_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = 0.04 }
		custom_effect_tooltip = SOV_remove_5_airforce_factionalism_var
        
        # Show tooltip and apply political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
        
        # Set flag to prevent multiple applications
        set_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
    }
    # Case 3: Increase Factionalism over 75
    else = {
        # Decrease Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = -5
			tooltip = sov_remove_5_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = 0.02 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = 0.04 }
		custom_effect_tooltip = SOV_remove_5_airforce_factionalism_var
    }
}
add_10_airforce_factionalism_effect = {
    # Case 1: Factionalism reaches maximum cap (90+)
    if = {
        limit = {
            check_variable = { SOV_airforce_factionalism_var > 89 }
        }
        # Set to maximum Factionalism
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 100
			tooltip = sov_add_10_airforce_factionalism
		}
		set_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.2 }
		set_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.4 }
		custom_effect_tooltip = SOV_full_airforce_factionalism
    }
    # Case 2: Factionalism between 25 and 97.5
    else_if = {
        limit = {
            check_variable = { 
                var = SOV_airforce_factionalism_var 
                value = 25 
                compare = greater_than_or_equals 
            }
            NOT = { 
                check_variable = { SOV_airforce_factionalism_var > 89 }
            }
            has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
        }
        # Increase Factionalism
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 10
			tooltip = sov_add_10_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.08 }
		custom_effect_tooltip = SOV_add_10_airforce_factionalism_var
        
        # Show tooltip and remove political power penalty
        add_to_variable = { SOV_the_red_airforce_political_power_factor = 0.05 }
        custom_effect_tooltip = SOV_the_red_army_political_power_factor_remove
        
        # Clear flag to prevent multiple applications
        clr_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
    }
    # Case 3: Factionalism below 75
    else = {
        # Increase Factionalism without additional bonuses
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 10
			tooltip = sov_add_10_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.04 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.08 }
		custom_effect_tooltip = SOV_add_10_airforce_factionalism_var
    }
}
remove_10_airforce_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_factionalism_var < 10
			}
		}
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 0
			tooltip = sov_remove_10_airforce_factionalism
		}
		set_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = -0.2 }
		set_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = -0.4 }
		custom_effect_tooltip = SOV_full_airforce_factionalism
		if = {
			limit = {
				check_variable = { var = SOV_airforce_factionalism_var value = 25 compare = less_than_or_equals }
				NOT = { has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag }
			}
			add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
			custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
			set_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = -10
			tooltip = sov_remove_10_airforce_factionalism
		}
		add_to_variable = { SOV_soviet_airforce_air_mission_xp_gain_factor = 0.04 }
		add_to_variable = { SOV_soviet_airforce_air_training_xp_gain_factor = 0.08 }
		custom_effect_tooltip = SOV_remove_10_airforce_factionalism_var
		if = {
			limit = {
				check_variable = { var = SOV_airforce_factionalism_var value = 25 compare = less_than_or_equals }
				NOT = { has_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag }
			}
			add_to_variable = { SOV_the_red_airforce_political_power_factor = -0.05 }
			custom_effect_tooltip = SOV_the_red_army_political_power_factor_add
			set_country_flag = SOV_add_2_5_airforce_factionalism_too_low_flag
		}
	}
}
add_15_airforce_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_factionalism_var > 84
			}
		}
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 100
			tooltip = sov_add_15_airforce_factionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = 15
			tooltip = sov_add_15_airforce_factionalism
		}
	}
}
remove_15_airforce_factionalism_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_airforce_factionalism_var < 15
			}
		}
		set_variable = {
			var = SOV_airforce_factionalism_var
			value = 0
			tooltip = sov_remove_15_airforce_factionalism
		}
	}
	else = {
		add_to_variable = {
			var = SOV_airforce_factionalism_var
			value = -15
			tooltip = sov_remove_15_airforce_factionalism
		}
	}
}

#
# Tukachevskys Coup
#
add_2_5_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var > 97.5
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 100
			tooltip = sov_tukachevsky_coup_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 2.5
			tooltip = sov_add_2_5_tukachevsky_coup_progress
		}
	}
}
remove_2_5_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var < 2.5
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 0
			tooltip = sov_tukachevsky_coup_progress_is_0
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = -2.5
			tooltip = sov_remove_2_5_tukachevsky_coup_progress
		}
	}
}
add_5_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var > 94
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 100
			tooltip = sov_tukachevsky_coup_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 5
			tooltip = sov_add_5_tukachevsky_coup_progress
		}
	}
}
remove_5_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var < 5
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 0
			tooltip = sov_tukachevsky_coup_progress_is_0
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = -5
			tooltip = sov_remove_5_tukachevsky_coup_progress
		}
	}
}
add_10_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var > 89
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 100
			tooltip = sov_tukachevsky_coup_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 10
			tooltip = sov_add_10_tukachevsky_coup_progress
		}
	}
}
remove_10_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var < 10
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 0
			tooltip = sov_tukachevsky_coup_progress_is_0
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = -10
			tooltip = sov_remove_10_tukachevsky_coup_progress
		}
	}
}
add_15_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var > 84
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 100
			tooltip = sov_tukachevsky_coup_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 15
			tooltip = sov_add_15_tukachevsky_coup_progress
		}
	}
}
remove_15_tukachevsky_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				SOV_tukachevsky_coup_progress_var < 15
			}
		}
		set_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = 0
			tooltip = sov_remove_15_tukachevsky_coup_progress
		}
	}
	else = {
		add_to_variable = {
			var = SOV_tukachevsky_coup_progress_var
			value = -15
			tooltip = sov_remove_15_tukachevsky_coup_progress
		}
	}
}

#Land Reform
add_5_land_reform = {
	if = {
		limit = {
			check_variable = {
				RUS_land_reform_var > 94
			}
		}
		set_variable = {
			var = RUS_land_reform_var
			value = 1
			tooltip = RUS_land_reform_var_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = RUS_land_reform_var
			value = 5
			tooltip = RUS_land_reform_var_progress_add_5
		}
	}
}

#white army
RUS_you_can_play_now = {
	every_state = {
		limit = {
			OR = {
				state = 195
				state = 208
				state = 244
				state = 209
				state = 263
				state = 210
				state = 246
				state = 242
				state = 243
				state = 247
				state = 264
				state = 214
				state = 219
				state = 205
				state = 248
				state = 250
				state = 253
				state = 224
				state = 254
				state = 256
				state = 223
				state = 222
				state = 258
				state = 257
				state = 252
				state = 255
				state = 239
				state = 265
				state = 351
				state = 829
				state = 879
				state = 880
			}
		}
		add_core_of = RUS
	}
	RUS = {
		inherit_technology = SOV
		set_state_owner = 222
		set_state_owner = 224
		add_manpower = 50000
		add_ideas = RUS_rudiger_von_der_goltz
	}
	SOV = {
		set_state_controller = 222
		set_state_controller = 224
	}
	GER = {
		if = {
			limit = {
				has_dlc = "Together for Victory"
			}
			set_autonomy = {
				target = RUS
				autonomous_state = autonomy_cooperating_country
				freedom_level = 0.2
			}
			else = {
				puppet = RUS
			}
		}
		add_to_faction = RUS
	}
	RUS = {
		become_exiled_in = { target = GER legitimacy = 15 }
		set_politics = {
			ruling_party = neutrality
			last_election = "1936.1.1"
			election_frequency = 48
			elections_allowed = yes
		}
		set_popularities = {
			democratic = 14
			fascism = 36
			neutrality = 40
			communism = 10
		}
		declare_war_on = {
			target = SOV
			type = annex_everything
		}
		add_ideas = RUS_support_from_germany
		if = {
			limit = {
				SOV = { has_idea = SOV_idea_sluggish_industrialization }
			}
			add_ideas = SOV_idea_sluggish_industrialization
		}
	}
	64 = {
		create_unit = {
			division = "is_name_ordered = yes division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1"
			owner = RUS
			count = 10
		}
		create_unit = {
			division = "is_name_ordered = yes division_template = \"Kavaleriyskaya Diviziya\" start_experience_factor = 0.1"
			owner = RUS
			count = 3
		}
	}
}

#revolution world!
ITA_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = ITA
			has_war_with = ROOT
		}
		set_cosmetic_tag = ITA_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
UKR_UPR_revolution_by_soviet = {
	random_other_country = {
		limit = {
			OR = {
				original_tag = UKR
				original_tag = UPR
			}
			has_war_with = ROOT
		}
		set_cosmetic_tag = UKR_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
LIT_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = LIT
			has_war_with = ROOT
		}
		set_cosmetic_tag = LIT_communism
	}
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
BLR_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = BLR
			has_war_with = ROOT
		}
		set_cosmetic_tag = BLR_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
POL_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = POL
			has_war_with = ROOT
		}
		set_cosmetic_tag = POL_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
UBD_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = UBD
			has_war_with = ROOT
		}
		set_cosmetic_tag = UBD_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
LAT_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = LAT
			has_war_with = ROOT
		}
		set_cosmetic_tag = LAT_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
EST_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = EST
			has_war_with = ROOT
		}
		set_cosmetic_tag = EST_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
PER_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = PER
			has_war_with = ROOT
		}
		set_cosmetic_tag = PER_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
AFG_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = AFG
			has_war_with = ROOT
		}
		set_cosmetic_tag = AFG_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
TUR_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = TUR
			has_war_with = ROOT
		}
		set_cosmetic_tag = TUR_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
IRQ_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = IRQ
			has_war_with = ROOT
		}
		set_cosmetic_tag = IRQ_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
SYR_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = SYR
			has_war_with = ROOT
		}
		set_cosmetic_tag = SYR_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
ETH_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = ETH
			has_war_with = ROOT
		}
		set_cosmetic_tag = ETH_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
EGY_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = EGY
			has_war_with = ROOT
		}
		set_cosmetic_tag = EGY_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
LIB_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = LIB
			has_war_with = ROOT
		}
		set_cosmetic_tag = LIB_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
SOM_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = SOM
			has_war_with = ROOT
		}
		set_cosmetic_tag = SOM_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
SAF_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = SAF
			has_war_with = ROOT
		}
		set_cosmetic_tag = SAF_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
CZE_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = CZE
			has_war_with = ROOT
		}
		set_cosmetic_tag = CZE_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
FIN_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = FIN
			has_war_with = ROOT
		}
		set_cosmetic_tag = FIN_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
SLO_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = SLO
			has_war_with = ROOT
		}
		set_cosmetic_tag = SLO_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
HUN_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = HUN
			has_war_with = ROOT
		}
		set_cosmetic_tag = HUN_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
AUS_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = AUS
			has_war_with = ROOT
		}
		set_cosmetic_tag = AUS_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
ROM_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = ROM
			has_war_with = ROOT
		}
		set_cosmetic_tag = ROM_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
SER_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = SER
			has_war_with = ROOT
		}
		set_cosmetic_tag = SER_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
GRE_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = GRE
			has_war_with = ROOT
		}
		set_cosmetic_tag = GRE_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}
BUL_revolution_by_soviet = {
	random_other_country = {
		limit = {
			original_tag = BUL
			has_war_with = ROOT
		}
		set_cosmetic_tag = BUL_communism
	}
	add_ideas = with_soviet_idea
	SOV = { add_timed_idea = { idea = SOV_support_revolution days = 200 } }
}

German_influence_add_30 = {
	if = {
		limit = {
			check_variable = { RUS_influence_of_germany_progress_var > 69 }
		}
		set_variable = { RUS_influence_of_germany_progress_var = 100 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_is_100
	}
	else = {
		add_to_variable = { RUS_influence_of_germany_progress_var = 30 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_add_30
	}
}

German_influence_add_5 = {
	if = {
		limit = {
			check_variable = { RUS_influence_of_germany_progress_var > 94 }
		}
		set_variable = { RUS_influence_of_germany_progress_var = 100 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_is_100
	}
	else = {
		add_to_variable = { RUS_influence_of_germany_progress_var = 5 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_add_5
	}
}

German_influence_add_2_5 = {
	if = {
		limit = {
			check_variable = { RUS_influence_of_germany_progress_var > 97 }
		}
		set_variable = { RUS_influence_of_germany_progress_var = 100 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_is_100
	}
	else = {
		add_to_variable = { RUS_influence_of_germany_progress_var = 2.5 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_add_2_5
	}
}

German_influence_remove_2_5 = {
	if = {
		limit = {
			check_variable = { RUS_influence_of_germany_progress_var < 3 }
		}
		set_variable = { RUS_influence_of_germany_progress_var = 0 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_is_0
	}
	else = {
		add_to_variable = { RUS_influence_of_germany_progress_var = -2.5 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_de_2_5_tt
	}
}

German_influence_remove_5 = {
	if = {
		limit = {
			check_variable = { RUS_influence_of_germany_progress_var < 6 }
		}
		set_variable = { RUS_influence_of_germany_progress_var = 0 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_is_0
	}
	else = {
		add_to_variable = { RUS_influence_of_germany_progress_var = -5 }
		custom_effect_tooltip = RUS_influence_of_germany_progress_var_de_5_tt
	}
}

add_10_denikin_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				RUS_denikin_coup_progress_var > 89
			}
		}
		set_variable = {
			var = RUS_denikin_coup_progress_var
			value = 100
			tooltip = rus_denikin_coup_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = RUS_denikin_coup_progress_var
			value = 10
			tooltip = rus_add_10_denikin_coup_progress
		}
	}
}
remove_10_denikin_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				RUS_denikin_coup_progress_var < 10
			}
		}
		set_variable = {
			var = RUS_denikin_coup_progress_var
			value = 0
			tooltip = rus_denikin_coup_progress_is_0
		}
	}
	else = {
		add_to_variable = {
			var = RUS_denikin_coup_progress_var
			value = -10
			tooltip = rus_remove_10_denikin_coup_progress
		}
	}
}

add_10_royalists_progress_effect = {
	if = {
		limit = {
			check_variable = {
				RUS_royalists_progress_var > 89
			}
		}
		set_variable = {
			var = RUS_royalists_progress_var
			value = 100
			tooltip = rus_royalists_progress_is_100
		}
	}
	else = {
		add_to_variable = {
			var = RUS_royalists_progress_var
			value = 10
			tooltip = rus_add_10_royalists_progress
		}
	}
}
remove_10_royalists_coup_progress_effect = {
	if = {
		limit = {
			check_variable = {
				RUS_royalists_progress_var < 10
			}
		}
		set_variable = {
			var = RUS_royalists_progress_var
			value = 0
			tooltip = rus_royalists_progress_is_0
		}
	}
	else = {
		add_to_variable = {
			var = RUS_royalists_progress_var
			value = -10
			tooltip = rus_remove_10_royalists_progress
		}
	}
}

#Collapsing Economy
economy_is_dying = {
	if = {
		limit = {
			NOT = { has_idea = SOV_economic_crisis }
			NOT = { has_idea = SOV_economic_crisis_1 }
			NOT = { has_idea = SOV_economic_recession }
			NOT = { has_idea = SOV_economic_recession_1 }
			NOT = { has_idea = SOV_economic_collapse }
			NOT = { has_idea = SOV_economic_collapse_1 }
		}
		add_ideas = SOV_economic_crisis
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_crisis
		}
		swap_ideas = {
			remove_idea = SOV_economic_crisis
			add_idea = SOV_economic_crisis_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_crisis_1
		}
		swap_ideas = {
			remove_idea = SOV_economic_crisis_1
			add_idea = SOV_economic_recession
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_recession
		}
		swap_ideas = {
			remove_idea = SOV_economic_recession
			add_idea = SOV_economic_recession_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_recession_1
		}
		swap_ideas = {
			remove_idea = SOV_economic_recession_1
			add_idea = SOV_economic_collapse
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_collapse
		}
		swap_ideas = {
			remove_idea = SOV_economic_collapse
			add_idea = SOV_economic_collapse_1
		}
	}
}

#Good Economy
economy_is_good = {
	if = {
		limit = {
			has_idea = SOV_economic_collapse_1
		}
		swap_ideas = {
			remove_idea = SOV_economic_collapse_1
			add_idea = SOV_economic_collapse
		}
		add_days_mission_timeout = {
			mission = SOV_the_clock_is_ticking
			days = 50
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_collapse
		}
		swap_ideas = {
			remove_idea = SOV_economic_collapse
			add_idea = SOV_economic_recession_1
		}
		add_days_mission_timeout = {
			mission = SOV_the_clock_is_ticking
			days = 50
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_recession_1
		}
		swap_ideas = {
			remove_idea = SOV_economic_recession_1
			add_idea = SOV_economic_recession
		}
		add_days_mission_timeout = {
			mission = SOV_the_clock_is_ticking
			days = 50
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_recession
		}
		swap_ideas = {
			remove_idea = SOV_economic_recession
			add_idea = SOV_economic_crisis_1
		}
		add_days_mission_timeout = {
			mission = SOV_the_clock_is_ticking
			days = 50
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_crisis_1
		}
		swap_ideas = {
			remove_idea = SOV_economic_crisis_1
			add_idea = SOV_economic_crisis
		}
		add_days_mission_timeout = {
			mission = SOV_the_clock_is_ticking
			days = 50
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_economic_crisis
		}
		remove_ideas = SOV_economic_crisis
		add_days_mission_timeout = {
			mission = SOV_the_clock_is_ticking
			days = 50
		}
	}
}

SOV_fall_in_wwiii = {
	every_country = {
		limit = {
			is_subject_of = SOV
			has_country_flag = third_world_war_loser
			capital_scope = { is_on_continent = europe }
		}
		FRA = {
			if = {
				limit = {
					has_dlc = "Together for Victory"
				}
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_satellite
				}
			}
			else = {
				puppet = PREV
			}
		}
	}
	if = {
		limit = {
			OR = {
				POL = { exists = no }
				POL = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				OR = {
					is_owned_by = SOV
					is_owned_by = DDR
				}
				OR = {
					is_core_of = POL
					state = 87
					state = 98
				}
			}
			transfer_state_to = POL
		}
		if = {
			limit = {
				NOT = { POL = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = POL
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = POL
				}
			}
		}
	}
	if = {
		limit = {
			DDR = { has_country_flag = third_world_war_loser }
		}
		if = {
			limit = {
				GER = { exists = yes }
			}
			GER = { annex_country = { target = DDR transfer_troops = yes } }
			every_state = {
				limit = {
					is_core_of = DDR
				}
				remove_core_of = DDR
			}
		}
		else_if = {
			limit = {
				G03 = { exists = yes }
			}
			G03 = { annex_country = { target = DDR transfer_troops = yes } }
			every_state = {
				limit = {
					is_core_of = DDR
				}
				add_core_of = G03
				remove_core_of = DDR
			}
		}
		else_if = {
			limit = {
				G01 = { exists = yes }
			}
			G01 = { annex_country = { target = DDR transfer_troops = yes } }
			every_state = {
				limit = {
					is_core_of = DDR
				}
				add_core_of = G01
				remove_core_of = DDR
			}
		}
	}
	if = {
		limit = {
			OR = {
				LIT = { exists = no }
				LIT = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				OR = {
					AND = {
						is_owned_by = SOV
						is_core_of = LIT
					}
					state = 188
				}
			}
			transfer_state_to = LIT
		}
		if = {
			limit = {
				NOT = { LIT = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = LIT
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = LIT
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				EST = { exists = no }
				EST = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				is_core_of = EST
			}
			transfer_state_to = EST
		}
		if = {
			limit = {
				NOT = { EST = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = EST
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = EST
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				LAT = { exists = no }
				LAT = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				OR = {
					is_core_of = LAT
					state = 810
				}
			}
			transfer_state_to = LAT
		}
		if = {
			limit = {
				NOT = { LAT = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = LAT
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = LAT
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				BLR = { exists = no }
				BLR = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				is_core_of = BLR
			}
			transfer_state_to = BLR
		}
		if = {
			limit = {
				NOT = { BLR = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = BLR
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = BLR
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				UKR = { exists = no }
				UKR = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				OR = {
					is_core_of = UKR
					is_core_of = USS
					is_core_of = UPR
				}
			}
			add_core_of = UKR
			transfer_state_to = UKR
		}
		if = {
			limit = {
				NOT = { UKR = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = UKR
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = UKR
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				GEO = { exists = no }
				GEO = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				is_core_of = GEO
			}
			transfer_state_to = GEO
		}
		if = {
			limit = {
				NOT = { GEO = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = GEO
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = GEO
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				AZR = { exists = no }
				AZR = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				is_core_of = AZR
			}
			transfer_state_to = AZR
		}
		if = {
			limit = {
				NOT = { AZR = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = AZR
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = AZR
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				ARM = { exists = no }
				ARM = { has_country_flag = third_world_war_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				is_core_of = ARM
			}
			transfer_state_to = ARM
		}
		if = {
			limit = {
				NOT = { ARM = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = ARM
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = ARM
				}
			}
		}
	}
	if = {
		limit = {
			RUS = { exists = no }
		}
		every_state = {
			limit = {
				is_owned_by = SOV
				OR = {
					state = 195
					state = 208
					state = 244
					state = 209
					state = 263
					state = 210
					state = 246
					state = 242
					state = 243
					state = 247
					state = 264
					state = 214
					state = 219
					state = 205
					state = 248
					state = 250
					state = 253
					state = 224
					state = 254
					state = 256
					state = 223
					state = 222
					state = 258
					state = 257
					state = 252
					state = 255
					state = 239
					state = 265
					state = 351
					state = 829
					state = 879
					state = 880
					state = 401
					state = 251
					state = 249
					state = 652
					state = 833
					state = 400
					state = 397
					state = 651
					state = 399
					state = 398
					state = 582
					state = 573
					state = 262
					state = 958
					state = 825
					state = 581
					state = 407
					state = 406
					state = 216
					state = 215
					state = 213
					state = 220
					state = 988
					state = 260
					state = 218
					state = 217
					state = 245
					state = 236
					state = 237
					state = 238
					state = 234
					state = 235
					state = 233
					state = 827
					state = 828
					state = 232
					state = 821
				}
			}
			add_core_of = RUS
			transfer_state_to = RUS
		}
		RUS = { drop_cosmetic_tag = yes }
		if = {
			limit = {
				NOT = { RUS = { is_subject_of = FRA } }
			}
			FRA = {
				if = {
					limit = {
						has_dlc = "Together for Victory"
					}
					set_autonomy = {
						target = RUS
						autonomous_state = autonomy_satellite
					}
				}
				else = {
					puppet = RUS
				}
			}
		}
	}
	every_state = {
		limit = {
			is_owned_by = SOV
			is_core_of = KAZ
		}
		transfer_state_to = KAZ
	}
	every_state = {
		limit = {
			is_owned_by = SOV
			is_core_of = TUK
		}
		transfer_state_to = TUK
	}
	SOV = {
		set_capital = {
		  state = 571
		  remember_old_capital = no
		}
		mark_focus_tree_layout_dirty = yes
		country_event = { id = soviet_rework_troika.038 days = 25 }
		complete_national_focus = SOV_the_war_has_been_lost
	}
}

death_of_FRA = {
	every_country = {
		limit = {
			has_country_flag = third_world_war_loser
		}
		SOV = {
			if = {
				limit = {
					has_dlc = "Together for Victory"
				}
				set_autonomy = {
					target = PREV
					autonomous_state = autonomy_satellite
				}
			}
			else = {
				puppet = PREV
			}
		}
	}
	if = {
		limit = {
			GER = { has_country_flag = third_world_war_loser }
		}
		DDR = {
			annex_country = {
				target = GER
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			WUR = { has_country_flag = third_world_war_loser }
		}
		DDR = {
			annex_country = {
				target = WUR
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			BAD = { has_country_flag = third_world_war_loser }
		}
		DDR = {
			annex_country = {
				target = BAD
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			CFR = { has_country_flag = third_world_war_loser }
		}
		DDR = {
			annex_country = {
				target = CFR
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				BAY = { has_country_flag = third_world_war_loser }
				BAY = { has_country_flag = third_world_war_half_loser }
			}
		}
		DDR = {
			annex_country = {
				target = BAY
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				HAN = { has_country_flag = third_world_war_loser }
				HAN = { has_country_flag = third_world_war_half_loser }
			}
		}
		DDR = {
			annex_country = {
				target = HAN
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				SHL = { has_country_flag = third_world_war_loser }
				SHL = { has_country_flag = third_world_war_half_loser }
			}
		}
		DDR = {
			annex_country = {
				target = SHL
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				ENG = { has_country_flag = third_world_war_loser }
				ENG = { has_country_flag = third_world_war_half_loser }
			}
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = GER
			}
			transfer_state_to = DDR
		}
	}
	if = {
		limit = {
			OR = {
				G01 = { has_country_flag = third_world_war_loser }
				G01 = { has_country_flag = third_world_war_half_loser }
			}
		}
		DDR = {
			annex_country = {
				target = G01
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				G02 = { has_country_flag = third_world_war_loser }
				G02 = { has_country_flag = third_world_war_half_loser }
			}
		}
		DDR = {
			annex_country = {
				target = G02
				transfer_troops = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				G03 = { has_country_flag = third_world_war_loser }
				G03 = { has_country_flag = third_world_war_half_loser }
			}
		}
		DDR = {
			annex_country = {
				target = G03
				transfer_troops = yes
			}
		}
	}
	#free british colonies
	if = {
		limit = {
			ENG = { has_country_flag = third_world_war_loser }
		}
		ENG = { drop_cosmetic_tag = yes }
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = CAN
			}
			transfer_state_to = CAN
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = AST
			}
			transfer_state_to = AST
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = NZL
			}
			transfer_state_to = NZL
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = RAJ
			}
			transfer_state_to = RAJ
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = GYA
			}
			transfer_state_to = GYA
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = BLZ
			}
			transfer_state_to = BLZ
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = BAH
			}
			transfer_state_to = BAH
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = JAM
			}
			transfer_state_to = JAM
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = TRI
			}
			transfer_state_to = TRI
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = BAS
			}
			transfer_state_to = BAS
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = TRI
			}
			transfer_state_to = TRI
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				OR = {
					state = 980
					state = 333
				}
			}
			transfer_state_to = FMS
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				OR = {
					state = 712
					state = 711
				}
			}
			transfer_state_to = INS
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = SOL
			}
			transfer_state_to = SOL
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = SRL
			}
			transfer_state_to = SRL
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = KUW
			}
			transfer_state_to = KUW
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = QAT
			}
			transfer_state_to = QAT
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = UAE
			}
			transfer_state_to = UAE
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = FIJ
			}
			transfer_state_to = FIJ
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = CYP
			}
			transfer_state_to = CYP
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				state = 270
			}
			transfer_state_to = CHL
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				state = 720
			}
			transfer_state_to = ARG
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				state = 446
			}
			transfer_state_to = EGY
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				state = 726
			}
			transfer_state_to = NZL
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = SRI
			}
			transfer_state_to = SRI
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				OR = {
					is_core_of = KEN
					state = 844
				}
			}
			transfer_state_to = KEN
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = UGA
			}
			transfer_state_to = UGA
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = RWA
			}
			transfer_state_to = RWA
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = BRD
			}
			transfer_state_to = BRD
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = TZN
			}
			transfer_state_to = TZN
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = MLW
			}
			transfer_state_to = MLW
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = ZAM
			}
			transfer_state_to = ZAM
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = NMB
			}
			transfer_state_to = NMB
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = MLD
			}
			transfer_state_to = MLD
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = NGA
			}
			transfer_state_to = NGA
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = GHA
			}
			transfer_state_to = GHA
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = GAM
			}
			transfer_state_to = GAM
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = SIE
			}
			transfer_state_to = SIE
		}
		every_state = {
			limit = {
				is_owned_by = ENG
				is_core_of = PNG
			}
			transfer_state_to = PNG
		}
	}
	every_state = {
		limit = {
			is_owned_by = FRA
			is_core_of = GER
		}
		transfer_state_to = DDR
	}
	if = {
		limit = {
			FRA = { has_country_flag = third_world_war_loser }
		}
		FRA = {
			drop_cosmetic_tag = yes
			remove_ideas = national_mobilized_economy
			remove_ideas = syndicalist_economy
			remove_ideas = free_market_economy
			remove_dynamic_modifier = FRA_total_mobilization
			remove_dynamic_modifier = FRA_bucard_modifier
			remove_dynamic_modifier = FRA_syndicalist_society_main_modifier
			remove_dynamic_modifier = FRA_harmonious_order_modifier
			remove_dynamic_modifier = FRA_consumer_goods_factor_decision
			remove_dynamic_modifier = FRA_research_modifier
			remove_dynamic_modifier = FRA_industry_modifier
			remove_dynamic_modifier = FRA_military_modifier
		}
		every_state = {
			limit = {
				is_owned_by = FRA
				is_core_of = CAN
			}
			transfer_state_to = CAN
		}
		if = {
			limit = {
				SPA = {
					exists = yes
				}
			}
			FRA = {
				every_state = {
					limit = {
						is_owned_by = FRA
						OR = {
							is_core_of = SPA
							state = 290
							state = 699
							state = 783
							state = 178
							state = 297
						}
					}
					transfer_state_to = SPA
				}
			}
		}
		else = {
			FRA = {
				every_state = {
					limit = {
						is_owned_by = FRA
						OR = {
							is_core_of = SPR
							state = 290
							state = 699
							state = 783
							state = 178
							state = 297
						}
					}
					transfer_state_to = SPR
				}
			}
		}
		FRA = {
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = ADO
				}
				transfer_state_to = ADO
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = CAY
				}
				transfer_state_to = CAY
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = MOR
				}
				transfer_state_to = MOR
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = ALG
				}
				transfer_state_to = ALG
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = TUN
				}
				transfer_state_to = TUN
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = MRT
				}
				transfer_state_to = MRT
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = MLI
				}
				transfer_state_to = MLI
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = SEN
				}
				transfer_state_to = SEN
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = GNA
				}
				transfer_state_to = GNA
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = VOL
				}
				transfer_state_to = VOL
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = IVO
				}
				transfer_state_to = IVO
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = NGR
				}
				transfer_state_to = NGR
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = CHA
				}
				transfer_state_to = CHA
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = TOG
				}
				transfer_state_to = TOG
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = DAH
				}
				transfer_state_to = DAH
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = CMR
				}
				transfer_state_to = CMR
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = CAR
				}
				transfer_state_to = CAR
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = GAB
				}
				transfer_state_to = GAB
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = RCG
				}
				transfer_state_to = RCG
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = MAD
				}
				transfer_state_to = MAD
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = VIN
				}
				transfer_state_to = VIN
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = LAO
				}
				transfer_state_to = LAO
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = CAM
				}
				transfer_state_to = CAM
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = TAH
				}
				transfer_state_to = TAH
			}
			every_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = SUR
				}
				transfer_state_to = SUR
			}
		}
	}
	if = {
		limit = {
			POR = { has_country_flag = third_world_war_loser }
		}
		every_state = {
			limit = {
				is_owned_by = POR
				is_core_of = MZB
			}
			transfer_state_to = MZB
		}
		every_state = {
			limit = {
				is_owned_by = POR
				is_core_of = GNB
			}
			transfer_state_to = GNB
		}
		every_state = {
			limit = {
				is_owned_by = POR
				is_core_of = ANG
			}
			transfer_state_to = ANG
		}
	}
	SOV = {
		if = {
			limit = {
				NOT = { DDR = { is_subject_of = SOV } }
				DDR = { exists = yes }
			}
			if = {
				limit = {
					has_dlc = "Together for Victory"
				}
				set_autonomy = {
					target = DDR
					autonomous_state = autonomy_puppet
					freedom_level = 0.5
				}
				else = {
					puppet = DDR
				}
			}
		}
	}
	every_state = {
		limit = {
			is_owned_by = DDR
		}
		add_core_of = DDR
	}
	if = {
		limit = {
			HOL = { exists = no }
		}
		every_state = {
			limit = {
				is_owned_by = FRA
				is_core_of = HOL
			}
			transfer_state_to = HOL
		}
	}
	SOV = {
		if = {
			limit = {
				HOL = { exists = yes }
			}
			if = {
				limit = {
					has_dlc = "Together for Victory"
				}
				set_autonomy = {
					target = HOL
					autonomous_state = autonomy_puppet
					freedom_level = 0.5
				}
				else = {
					puppet = HOL
				}
			}
		}
	}
	if = {
		limit = {
			BEL = { exists = no }
		}
		every_state = {
			limit = {
				is_owned_by = FRA
				is_core_of = BEL
			}
			transfer_state_to = BEL
		}
	}
	SOV = {
		if = {
			limit = {
				BEL = { exists = yes }
			}
			if = {
				limit = {
					has_dlc = "Together for Victory"
				}
				set_autonomy = {
					target = BEL
					autonomous_state = autonomy_puppet
					freedom_level = 0.5
				}
				else = {
					puppet = BEL
				}
			}
		}
	}
	SOV = {
		clr_country_flag = time_is_going_on_flag
		remove_ideas = SOV_economic_crisis
		remove_ideas = SOV_economic_crisis_1
		remove_ideas = SOV_economic_recession
		remove_ideas = SOV_economic_recession_1
		remove_ideas = SOV_economic_collapse
		remove_ideas = SOV_economic_collapse_1
		if = {
			limit = {
				has_country_leader = {
					character = SOV_mikhail_tukhachevsky
					ruling_only = yes
				}
			}
			country_event = soviet_rework_troika.064
		}
	}
}